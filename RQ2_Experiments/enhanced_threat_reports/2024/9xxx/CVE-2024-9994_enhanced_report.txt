CVE-2024-9994 pertains to a stored cross-site scripting (XSS) vulnerability
affecting all versions up to and including 6.1.12 of the Essential Addons for
Elementor plugin for WordPress, a widely used extension that provides additional
widgets, templates, and builders for Elementor-based websites. The root cause of
this vulnerability lies in the plugin’s insufficient sanitization and output
escaping of user-supplied input within the `eael_pricing_item_tooltip_content`
parameter of the Pricing Table Widget. Specifically, the plugin fails to
properly neutralize malicious scripts embedded in this parameter, which is
designed to accept tooltip content. An attacker with contributor-level or higher
privileges—meaning they must be authenticated and possess editing rights—can
exploit this flaw by injecting malicious JavaScript code into the widget's
tooltip content field. Once stored, this malicious payload resides within the
website’s database and is rendered whenever a user visits a page containing the
compromised widget, leading to stored XSS. The technical exploitation mechanism
involves the attacker crafting a payload that bypasses the plugin’s weak input
validation, inserting malicious scripts that are stored unescaped in the page’s
HTML output. When other users access the affected page, the scripts execute
within their browsers, potentially stealing cookies, session tokens, or other
sensitive data, thereby compromising confidentiality. The CVSS assessment
indicates a high severity due to the attack vector being limited to
authenticated users with contributor privileges, but with low complexity since
the injection process is straightforward and requires no additional conditions
beyond access rights. The attack complexity is low because the attacker only
needs to input malicious code into the widget parameter; no advanced techniques
or environmental prerequisites are necessary. Privileges required are low, as
the attacker must have at least contributor privileges to modify widget content,
which is typical for users with content editing rights. The attack does not
require user interaction beyond the initial injection, as the malicious scripts
execute automatically when other users load the page, classifying the user
interaction as none. The scope remains unchanged, affecting only the local
website environment without extending beyond the application boundary. The
confidentiality impact is high because the injected scripts can exfiltrate
sensitive user data, such as cookies or session tokens, leading to potential
account hijacking or data theft. The integrity impact is similarly high, as
malicious scripts can alter page content or perform unauthorized actions on
behalf of users, undermining the trustworthiness of the website’s content. The
availability impact is minimal, as the vulnerability does not directly cause
service disruption; however, malicious scripts could, in some cases, lead to
client-side performance issues or resource exhaustion if crafted maliciously.
Real-world exploitation scenarios could involve an attacker with contributor
privileges injecting malicious payloads into the widget’s tooltip content, then
convincing other users—such as site visitors or administrators—to visit the
compromised pages, thereby executing malicious scripts in their browsers. This
could facilitate session hijacking, data theft, or even the deployment of
further malware. Mitigation strategies include updating the plugin to the latest
version where the sanitization routines are improved or applying a security
patch if available. Administrators should audit and restrict contributor
privileges, especially for untrusted users, and implement security controls such
as Web Application Firewalls (WAFs) to detect and block malicious payloads.
Additionally, disabling or removing the vulnerable widget until a fix is applied
can prevent exploitation. Developers should enhance input validation and output
escaping routines within the plugin code, ensuring all user-supplied data is
properly sanitized before rendering. Given the detailed technical analysis and
the consistency of the evidence, confidence in this threat intelligence is high,
as the root cause, exploitation mechanism, and impact have been thoroughly
assessed based on the available metadata and evidence.