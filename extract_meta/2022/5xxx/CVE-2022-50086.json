{
  "CVE Code": "CVE-2022-50086",
  "Published": "2025-06-18T11:02:27.283Z",
  "Updated": "2025-06-18T11:02:27.283Z",
  "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nblock: don't allow the same type rq_qos add more than once\n\nIn our test of iocost, we encountered some list add/del corruptions of\ninner_walk list in ioc_timer_fn.\n\nThe reason can be described as follows:\n\ncpu 0\t\t\t\t\tcpu 1\nioc_qos_write\t\t\t\tioc_qos_write\n\nioc = q_to_ioc(queue);\nif (!ioc) {\n        ioc = kzalloc();\n\t\t\t\t\tioc = q_to_ioc(queue);\n\t\t\t\t\tif (!ioc) {\n\t\t\t\t\t\tioc = kzalloc();\n\t\t\t\t\t\t...\n\t\t\t\t\t\trq_qos_add(q, rqos);\n\t\t\t\t\t}\n        ...\n        rq_qos_add(q, rqos);\n        ...\n}\n\nWhen the io.cost.qos file is written by two cpus concurrently, rq_qos may\nbe added to one disk twice. In that case, there will be two iocs enabled\nand running on one disk. They own different iocgs on their active list. In\nthe ioc_timer_fn function, because of the iocgs from two iocs have the\nsame root iocg, the root iocg's walk_list may be overwritten by each other\nand this leads to list add/del corruptions in building or destroying the\ninner_walk list.\n\nAnd so far, the blk-rq-qos framework works in case that one instance for\none type rq_qos per queue by default. This patch make this explicit and\nalso fix the crash above.",
  "ProblemTypes": [
    "N/A"
  ],
  "Affected": [
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "1da177e4c3f41524e886b7f1b8a0c1fc7321cac2",
        "1da177e4c3f41524e886b7f1b8a0c1fc7321cac2",
        "1da177e4c3f41524e886b7f1b8a0c1fc7321cac2",
        "1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
      ]
    },
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "5.15.61",
        "5.18.18",
        "5.19.2",
        "6.0"
      ]
    }
  ],
  "Reference": [
    "https://git.kernel.org/stable/c/0b7f5d7a4d2a72ad9de04ab8ccba2a31904aa638",
    "https://git.kernel.org/stable/c/08ef66e800a85afc6b54cb95841f6502627eee2e",
    "https://git.kernel.org/stable/c/0c9bb1acd1d103a3070b2126870eb52761d606ce",
    "https://git.kernel.org/stable/c/14a6e2eb7df5c7897c15b109cba29ab0c4a791b6"
  ]
}