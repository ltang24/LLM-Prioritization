{
  "CVE Code": "CVE-2022-49149",
  "Published": "2025-02-26T01:55:16.371Z",
  "Updated": "2025-05-04T08:31:01.988Z",
  "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nrxrpc: Fix call timer start racing with call destruction\n\nThe rxrpc_call struct has a timer used to handle various timed events\nrelating to a call.  This timer can get started from the packet input\nroutines that are run in softirq mode with just the RCU read lock held.\nUnfortunately, because only the RCU read lock is held - and neither ref or\nother lock is taken - the call can start getting destroyed at the same time\na packet comes in addressed to that call.  This causes the timer - which\nwas already stopped - to get restarted.  Later, the timer dispatch code may\nthen oops if the timer got deallocated first.\n\nFix this by trying to take a ref on the rxrpc_call struct and, if\nsuccessful, passing that ref along to the timer.  If the timer was already\nrunning, the ref is discarded.\n\nThe timer completion routine can then pass the ref along to the call's work\nitem when it queues it.  If the timer or work item where already\nqueued/running, the extra ref is discarded.",
  "ProblemTypes": [
    "N/A"
  ],
  "Affected": [
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "a158bdd3247b9656df36ba133235fff702e9fdc3",
        "a158bdd3247b9656df36ba133235fff702e9fdc3",
        "a158bdd3247b9656df36ba133235fff702e9fdc3",
        "a158bdd3247b9656df36ba133235fff702e9fdc3",
        "a158bdd3247b9656df36ba133235fff702e9fdc3"
      ]
    },
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "4.15",
        "0",
        "5.10.110",
        "5.15.33",
        "5.16.19",
        "5.17.2",
        "5.18"
      ]
    }
  ],
  "Reference": [
    "https://git.kernel.org/stable/c/051360e51341cd17738d82c15a8226010c7cb7f6",
    "https://git.kernel.org/stable/c/8cbf4ae7a2833767d63114573e5f9a45740cc975",
    "https://git.kernel.org/stable/c/54df5a37f1d951ed27fd47bf9b15a42279582110",
    "https://git.kernel.org/stable/c/5e3c11144e557a9dbf9a2f6abe444689ef9d8aae",
    "https://git.kernel.org/stable/c/4a7f62f91933c8ae5308f9127fd8ea48188b6bc3"
  ]
}