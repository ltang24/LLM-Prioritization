{
  "CVE Code": "CVE-2022-48867",
  "Published": "2024-08-21T06:09:57.153Z",
  "Updated": "2025-05-04T08:25:07.385Z",
  "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndmaengine: idxd: Prevent use after free on completion memory\n\nOn driver unload any pending descriptors are flushed at the\ntime the interrupt is freed:\nidxd_dmaengine_drv_remove() ->\n\tdrv_disable_wq() ->\n\t\tidxd_wq_free_irq() ->\n\t\t\tidxd_flush_pending_descs().\n\nIf there are any descriptors present that need to be flushed this\nflow triggers a \"not present\" page fault as below:\n\n BUG: unable to handle page fault for address: ff391c97c70c9040\n #PF: supervisor read access in kernel mode\n #PF: error_code(0x0000) - not-present page\n\nThe address that triggers the fault is the address of the\ndescriptor that was freed moments earlier via:\ndrv_disable_wq()->idxd_wq_free_resources()\n\nFix the use after free by freeing the descriptors after any possible\nusage. This is done after idxd_wq_reset() to ensure that the memory\nremains accessible during possible completion writes by the device.",
  "ProblemTypes": [
    "N/A"
  ],
  "Affected": [
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "63c14ae6c161dec8ff3be49277edc75a769e054a",
        "63c14ae6c161dec8ff3be49277edc75a769e054a"
      ]
    },
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "5.19",
        "0",
        "6.1.8",
        "6.2"
      ]
    }
  ],
  "Reference": [
    "https://git.kernel.org/stable/c/b9e8e3fcfec625fc1c2f68f684448aeeb882625b",
    "https://git.kernel.org/stable/c/1beeec45f9ac31eba52478379f70a5fa9c2ad005"
  ]
}