{
  "CVE Code": "CVE-2022-49850",
  "Published": "2025-05-01T14:10:05.167Z",
  "Updated": "2025-05-04T08:46:51.927Z",
  "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnilfs2: fix deadlock in nilfs_count_free_blocks()\n\nA semaphore deadlock can occur if nilfs_get_block() detects metadata\ncorruption while locating data blocks and a superblock writeback occurs at\nthe same time:\n\ntask 1                               task 2\n------                               ------\n* A file operation *\nnilfs_truncate()\n  nilfs_get_block()\n    down_read(rwsem A) <--\n    nilfs_bmap_lookup_contig()\n      ...                            generic_shutdown_super()\n                                       nilfs_put_super()\n                                         * Prepare to write superblock *\n                                         down_write(rwsem B) <--\n                                         nilfs_cleanup_super()\n      * Detect b-tree corruption *         nilfs_set_log_cursor()\n      nilfs_bmap_convert_error()             nilfs_count_free_blocks()\n        __nilfs_error()                        down_read(rwsem A) <--\n          nilfs_set_error()\n            down_write(rwsem B) <--\n\n                           *** DEADLOCK ***\n\nHere, nilfs_get_block() readlocks rwsem A (= NILFS_MDT(dat_inode)->mi_sem)\nand then calls nilfs_bmap_lookup_contig(), but if it fails due to metadata\ncorruption, __nilfs_error() is called from nilfs_bmap_convert_error()\ninside the lock section.\n\nSince __nilfs_error() calls nilfs_set_error() unless the filesystem is\nread-only and nilfs_set_error() attempts to writelock rwsem B (=\nnilfs->ns_sem) to write back superblock exclusively, hierarchical lock\nacquisition occurs in the order rwsem A -> rwsem B.\n\nNow, if another task starts updating the superblock, it may writelock\nrwsem B during the lock sequence above, and can deadlock trying to\nreadlock rwsem A in nilfs_count_free_blocks().\n\nHowever, there is actually no need to take rwsem A in\nnilfs_count_free_blocks() because it, within the lock section, only reads\na single integer data on a shared struct with\nnilfs_sufile_get_ncleansegs().  This has been the case after commit\naa474a220180 (\"nilfs2: add local variable to cache the number of clean\nsegments\"), that is, even before this bug was introduced.\n\nSo, this resolves the deadlock problem by just not taking the semaphore in\nnilfs_count_free_blocks().",
  "ProblemTypes": [
    "N/A"
  ],
  "Affected": [
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "e828949e5b42bfd234ee537cdb7c5e3a577958a3",
        "e828949e5b42bfd234ee537cdb7c5e3a577958a3",
        "e828949e5b42bfd234ee537cdb7c5e3a577958a3",
        "e828949e5b42bfd234ee537cdb7c5e3a577958a3",
        "e828949e5b42bfd234ee537cdb7c5e3a577958a3",
        "e828949e5b42bfd234ee537cdb7c5e3a577958a3",
        "e828949e5b42bfd234ee537cdb7c5e3a577958a3",
        "e828949e5b42bfd234ee537cdb7c5e3a577958a3"
      ]
    },
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "2.6.38",
        "0",
        "4.9.334",
        "4.14.300",
        "4.19.267",
        "5.4.225",
        "5.10.155",
        "5.15.79",
        "6.0.9",
        "6.1"
      ]
    }
  ],
  "Reference": [
    "https://git.kernel.org/stable/c/3c89ca6d3dfa6c09c515807a7a97a521f5d5147e",
    "https://git.kernel.org/stable/c/8b4506cff6630bb474bb46a2a75c31e533a756ba",
    "https://git.kernel.org/stable/c/f0cc93080d4c09510b74ecba87fd778cca390bb1",
    "https://git.kernel.org/stable/c/36ff974b0310771417c0be64b64aa221bd70d63d",
    "https://git.kernel.org/stable/c/1d4ff73062096c21b47954d2996b4df259777bda",
    "https://git.kernel.org/stable/c/abc082aac0d9b6b926038fc3adb7008306581be2",
    "https://git.kernel.org/stable/c/cb029b54953420f7a2d65100f1c5107f14411bdc",
    "https://git.kernel.org/stable/c/8ac932a4921a96ca52f61935dbba64ea87bbd5dc"
  ]
}