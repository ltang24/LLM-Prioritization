{
  "CVE Code": "CVE-2022-49963",
  "Published": "2025-06-18T11:00:24.021Z",
  "Updated": "2025-06-18T11:00:24.021Z",
  "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/i915/ttm: fix CCS handling\n\nCrucible + recent Mesa seems to sometimes hit:\n\nGEM_BUG_ON(num_ccs_blks > NUM_CCS_BLKS_PER_XFER)\n\nAnd it looks like we can also trigger this with gem_lmem_swapping, if we\nmodify the test to use slightly larger object sizes.\n\nLooking closer it looks like we have the following issues in\nmigrate_copy():\n\n  - We are using plain integer in various places, which we can easily\n    overflow with a large object.\n\n  - We pass the entire object size (when the src is lmem) into\n    emit_pte() and then try to copy it, which doesn't work, since we\n    only have a few fixed sized windows in which to map the pages and\n    perform the copy. With an object > 8M we therefore aren't properly\n    copying the pages. And then with an object > 64M we trigger the\n    GEM_BUG_ON(num_ccs_blks > NUM_CCS_BLKS_PER_XFER).\n\nSo it looks like our copy handling for any object > 8M (which is our\nCHUNK_SZ) is currently broken on DG2.\n\nTestcase: igt@gem_lmem_swapping\n(cherry picked from commit 8676145eb2f53a9940ff70910caf0125bd8a4bc2)",
  "ProblemTypes": [
    "N/A"
  ],
  "Affected": [
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "da0595ae91da837929a00470ab40546090e5b9ae",
        "da0595ae91da837929a00470ab40546090e5b9ae"
      ]
    },
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "5.19",
        "0",
        "5.19.8",
        "6.0"
      ]
    }
  ],
  "Reference": [
    "https://git.kernel.org/stable/c/97434cb55bd884bd268626ec41489f79b261b2d4",
    "https://git.kernel.org/stable/c/8d905254162965c8e6be697d82c7dbf5d08f574d"
  ]
}