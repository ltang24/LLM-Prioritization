{
  "CVE Code": "CVE-2024-26935",
  "Published": "2024-05-01T05:17:31.445Z",
  "Updated": "2025-05-04T12:55:14.484Z",
  "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: core: Fix unremoved procfs host directory regression\n\nCommit fc663711b944 (\"scsi: core: Remove the /proc/scsi/${proc_name}\ndirectory earlier\") fixed a bug related to modules loading/unloading, by\nadding a call to scsi_proc_hostdir_rm() on scsi_remove_host(). But that led\nto a potential duplicate call to the hostdir_rm() routine, since it's also\ncalled from scsi_host_dev_release(). That triggered a regression report,\nwhich was then fixed by commit be03df3d4bfe (\"scsi: core: Fix a procfs host\ndirectory removal regression\"). The fix just dropped the hostdir_rm() call\nfrom dev_release().\n\nBut it happens that this proc directory is created on scsi_host_alloc(),\nand that function \"pairs\" with scsi_host_dev_release(), while\nscsi_remove_host() pairs with scsi_add_host(). In other words, it seems the\nreason for removing the proc directory on dev_release() was meant to cover\ncases in which a SCSI host structure was allocated, but the call to\nscsi_add_host() didn't happen. And that pattern happens to exist in some\nerror paths, for example.\n\nSyzkaller causes that by using USB raw gadget device, error'ing on\nusb-storage driver, at usb_stor_probe2(). By checking that path, we can see\nthat the BadDevice label leads to a scsi_host_put() after a SCSI host\nallocation, but there's no call to scsi_add_host() in such path. That leads\nto messages like this in dmesg (and a leak of the SCSI host proc\nstructure):\n\nusb-storage 4-1:87.51: USB Mass Storage device detected\nproc_dir_entry 'scsi/usb-storage' already registered\nWARNING: CPU: 1 PID: 3519 at fs/proc/generic.c:377 proc_register+0x347/0x4e0 fs/proc/generic.c:376\n\nThe proper fix seems to still call scsi_proc_hostdir_rm() on dev_release(),\nbut guard that with the state check for SHOST_CREATED; there is even a\ncomment in scsi_host_dev_release() detailing that: such conditional is\nmeant for cases where the SCSI host was allocated but there was no calls to\n{add,remove}_host(), like the usb-storage case.\n\nThis is what we propose here and with that, the error path of usb-storage\ndoes not trigger the warning anymore.",
  "ProblemTypes": [
    "N/A"
  ],
  "Affected": [
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "88c3d3bb6469cea929ac68fd326bdcbefcdfdd83",
        "68c665bb185037e7eb66fb792c61da9d7151e99c",
        "2a764d55e938743efa7c2cba7305633bcf227f09",
        "7e0ae8667fcdd99d1756922e1140cac75f5fa279",
        "be03df3d4bfe7e8866d4aa43d62e648ffe884f5f",
        "be03df3d4bfe7e8866d4aa43d62e648ffe884f5f",
        "be03df3d4bfe7e8866d4aa43d62e648ffe884f5f",
        "be03df3d4bfe7e8866d4aa43d62e648ffe884f5f",
        "73f030d4ef6d1ad17f824a0a2eb637ef7a9c7d51"
      ]
    },
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "6.3",
        "0",
        "5.4.274",
        "5.10.215",
        "5.15.154",
        "6.1.84",
        "6.6.24",
        "6.7.12",
        "6.8.3",
        "6.9"
      ]
    }
  ],
  "Reference": [
    "https://git.kernel.org/stable/c/0053f15d50d50c9312d8ab9c11e2e405812dfcac",
    "https://git.kernel.org/stable/c/5c2386ba80e779a92ec3bb64ccadbedd88f779b1",
    "https://git.kernel.org/stable/c/cea234bb214b17d004dfdccce4491e6ff57c96ee",
    "https://git.kernel.org/stable/c/3678cf67ff7136db1dd3bf63c361650db5d92889",
    "https://git.kernel.org/stable/c/d4c34782b6d7b1e68d18d9549451b19433bd4c6c",
    "https://git.kernel.org/stable/c/e293c773c13b830cdc251f155df2254981abc320",
    "https://git.kernel.org/stable/c/f4ff08fab66eb5c0b97e1a24edac052fb40bf5d7",
    "https://git.kernel.org/stable/c/f23a4d6e07570826fe95023ca1aa96a011fa9f84"
  ]
}