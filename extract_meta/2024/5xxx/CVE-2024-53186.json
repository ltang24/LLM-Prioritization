{
  "CVE Code": "CVE-2024-53186",
  "Published": "2024-12-27T13:49:29.215Z",
  "Updated": "2025-05-04T13:00:39.217Z",
  "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nksmbd: fix use-after-free in SMB request handling\n\nA race condition exists between SMB request handling in\n`ksmbd_conn_handler_loop()` and the freeing of `ksmbd_conn` in the\nworkqueue handler `handle_ksmbd_work()`. This leads to a UAF.\n- KASAN: slab-use-after-free Read in handle_ksmbd_work\n- KASAN: slab-use-after-free in rtlock_slowlock_locked\n\nThis race condition arises as follows:\n- `ksmbd_conn_handler_loop()` waits for `conn->r_count` to reach zero:\n  `wait_event(conn->r_count_q, atomic_read(&conn->r_count) == 0);`\n- Meanwhile, `handle_ksmbd_work()` decrements `conn->r_count` using\n  `atomic_dec_return(&conn->r_count)`, and if it reaches zero, calls\n  `ksmbd_conn_free()`, which frees `conn`.\n- However, after `handle_ksmbd_work()` decrements `conn->r_count`,\n  it may still access `conn->r_count_q` in the following line:\n  `waitqueue_active(&conn->r_count_q)` or `wake_up(&conn->r_count_q)`\n  This results in a UAF, as `conn` has already been freed.\n\nThe discovery of this UAF can be referenced in the following PR for\nsyzkaller's support for SMB requests.",
  "ProblemTypes": [
    "N/A"
  ],
  "Affected": [
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "18f06bacc197d4ac9b518ad1c69999bc3d83e7aa",
        "e9dac92f4482a382e8c0fe1bc243da5fc3526b0c",
        "ee426bfb9d09b29987369b897fe9b6485ac2be27",
        "ee426bfb9d09b29987369b897fe9b6485ac2be27",
        "9fd3cde4628bcd3549ab95061f2bab74d2ed4f3b"
      ]
    },
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "6.12",
        "0",
        "6.6.64",
        "6.11.11",
        "6.12.2",
        "6.13"
      ]
    }
  ],
  "Reference": [
    "https://git.kernel.org/stable/c/a96f9eb7add30ba0fafcfe7b7aca090978196800",
    "https://git.kernel.org/stable/c/f20b77f7897e6aab9ce5527e6016ad2be5d70a33",
    "https://git.kernel.org/stable/c/96261adb998a3b513468b6ce17dbec76be5507d4",
    "https://git.kernel.org/stable/c/9a8c5d89d327ff58e9b2517f8a6afb4181d32c6e"
  ]
}