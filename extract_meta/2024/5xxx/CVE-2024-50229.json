{
  "CVE Code": "CVE-2024-50229",
  "Published": "2024-11-09T10:14:39.756Z",
  "Updated": "2025-05-04T12:59:56.529Z",
  "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnilfs2: fix potential deadlock with newly created symlinks\n\nSyzbot reported that page_symlink(), called by nilfs_symlink(), triggers\nmemory reclamation involving the filesystem layer, which can result in\ncircular lock dependencies among the reader/writer semaphore\nnilfs->ns_segctor_sem, s_writers percpu_rwsem (intwrite) and the\nfs_reclaim pseudo lock.\n\nThis is because after commit 21fc61c73c39 (\"don't put symlink bodies in\npagecache into highmem\"), the gfp flags of the page cache for symbolic\nlinks are overwritten to GFP_KERNEL via inode_nohighmem().\n\nThis is not a problem for symlinks read from the backing device, because\nthe __GFP_FS flag is dropped after inode_nohighmem() is called.  However,\nwhen a new symlink is created with nilfs_symlink(), the gfp flags remain\noverwritten to GFP_KERNEL.  Then, memory allocation called from\npage_symlink() etc.  triggers memory reclamation including the FS layer,\nwhich may call nilfs_evict_inode() or nilfs_dirty_inode().  And these can\ncause a deadlock if they are called while nilfs->ns_segctor_sem is held:\n\nFix this issue by dropping the __GFP_FS flag from the page cache GFP flags\nof newly created symlinks in the same way that nilfs_new_inode() and\n__nilfs_read_inode() do, as a workaround until we adopt nofs allocation\nscope consistently or improve the locking constraints.",
  "ProblemTypes": [
    "N/A"
  ],
  "Affected": [
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "21fc61c73c3903c4c312d0802da01ec2b323d174",
        "21fc61c73c3903c4c312d0802da01ec2b323d174",
        "21fc61c73c3903c4c312d0802da01ec2b323d174",
        "21fc61c73c3903c4c312d0802da01ec2b323d174",
        "21fc61c73c3903c4c312d0802da01ec2b323d174",
        "21fc61c73c3903c4c312d0802da01ec2b323d174",
        "21fc61c73c3903c4c312d0802da01ec2b323d174",
        "21fc61c73c3903c4c312d0802da01ec2b323d174",
        "076e4ab3279eb3ddb206de44d04df7aeb2428e09"
      ]
    },
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "4.5",
        "0",
        "4.19.323",
        "5.4.285",
        "5.10.229",
        "5.15.171",
        "6.1.116",
        "6.6.60",
        "6.11.7",
        "6.12"
      ]
    }
  ],
  "Reference": [
    "https://git.kernel.org/stable/c/cc38c596e648575ce58bfc31623a6506eda4b94a",
    "https://git.kernel.org/stable/c/a1686db1e59f8fc016c4c9361e2119dd206f479a",
    "https://git.kernel.org/stable/c/c72e0df0b56c1166736dc8eb62070ebb12591447",
    "https://git.kernel.org/stable/c/69548bb663fcb63f9ee0301be808a36b9d78dac3",
    "https://git.kernel.org/stable/c/58c7f44c7b9e5ac7e3b1e5da2572ed7767a12f38",
    "https://git.kernel.org/stable/c/1246d86e7bbde265761932c6e2dce28c69cdcb91",
    "https://git.kernel.org/stable/c/9aa5d43ac4cace8fb9bd964ff6c23f599dc3cd24",
    "https://git.kernel.org/stable/c/b3a033e3ecd3471248d474ef263aadc0059e516a"
  ]
}