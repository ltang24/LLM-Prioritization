{
  "CVE Code": "CVE-2024-53143",
  "Published": "2024-12-07T06:40:43.522Z",
  "Updated": "2025-05-04T09:54:07.791Z",
  "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfsnotify: Fix ordering of iput() and watched_objects decrement\n\nEnsure the superblock is kept alive until we're done with iput().\nHolding a reference to an inode is not allowed unless we ensure the\nsuperblock stays alive, which fsnotify does by keeping the\nwatched_objects count elevated, so iput() must happen before the\nwatched_objects decrement.\nThis can lead to a UAF of something like sb->s_fs_info in tmpfs, but the\nUAF is hard to hit because race orderings that oops are more likely, thanks\nto the CHECK_DATA_CORRUPTION() block in generic_shutdown_super().\n\nAlso, ensure that fsnotify_put_sb_watched_objects() doesn't call\nfsnotify_sb_watched_objects() on a superblock that may have already been\nfreed, which would cause a UAF read of sb->s_fsnotify_info.",
  "ProblemTypes": [
    "N/A"
  ],
  "Affected": [
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "d2f277e26f521ccf6fb438463b41dba6123caabe",
        "d2f277e26f521ccf6fb438463b41dba6123caabe",
        "d2f277e26f521ccf6fb438463b41dba6123caabe"
      ]
    },
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "6.10",
        "0",
        "6.11.11",
        "6.12.2",
        "6.13"
      ]
    }
  ],
  "Reference": [
    "https://git.kernel.org/stable/c/45a8f8232a495221ed058191629f5c628f21601a",
    "https://git.kernel.org/stable/c/83af1cfa10d9aafdabd06b3655e07727f373b434",
    "https://git.kernel.org/stable/c/21d1b618b6b9da46c5116c640ac4b1cc8d40d63a",
    "https://project-zero.issues.chromium.org/issues/379667898"
  ]
}