{
  "CVE Code": "CVE-2024-50203",
  "Published": "2024-11-08T06:07:54.207Z",
  "Updated": "2025-05-22T12:39:47.050Z",
  "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf, arm64: Fix address emission with tag-based KASAN enabled\n\nWhen BPF_TRAMP_F_CALL_ORIG is enabled, the address of a bpf_tramp_image\nstruct on the stack is passed during the size calculation pass and\nan address on the heap is passed during code generation. This may\ncause a heap buffer overflow if the heap address is tagged because\nemit_a64_mov_i64() will emit longer code than it did during the size\ncalculation pass. The same problem could occur without tag-based\nKASAN if one of the 16-bit words of the stack address happened to\nbe all-ones during the size calculation pass. Fix the problem by\nassuming the worst case (4 instructions) when calculating the size\nof the bpf_tramp_image address emission.",
  "ProblemTypes": [
    "N/A"
  ],
  "Affected": [
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "077149478497b2f00ff4fd9da2c892defa6418d8",
        "d9664e6ff040798a46cdc5d401064f55b8676c83",
        "19d3c179a37730caf600a97fed3794feac2b197b",
        "19d3c179a37730caf600a97fed3794feac2b197b",
        "6d218fcc707d6b2c3616b6cd24b948fd4825cfec"
      ]
    },
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "6.11",
        "0",
        "6.11.6",
        "6.12"
      ]
    }
  ],
  "Reference": [
    "https://git.kernel.org/stable/c/9e80f366ebfdfafc685fe83a84c34f7ef01cbe88",
    "https://git.kernel.org/stable/c/f521c2a0c0c4585f36d912bf62c852b88682c4f2",
    "https://git.kernel.org/stable/c/7db1a2121f3c7903b8e397392beec563c3d00950",
    "https://git.kernel.org/stable/c/a552e2ef5fd1a6c78267cd4ec5a9b49aa11bbb1c"
  ]
}