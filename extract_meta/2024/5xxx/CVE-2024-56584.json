{
  "CVE Code": "CVE-2024-56584",
  "Published": "2024-12-27T14:50:52.735Z",
  "Updated": "2025-05-04T09:59:02.385Z",
  "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nio_uring/tctx: work around xa_store() allocation error issue\n\nsyzbot triggered the following WARN_ON:\n\nWARNING: CPU: 0 PID: 16 at io_uring/tctx.c:51 __io_uring_free+0xfa/0x140 io_uring/tctx.c:51\n\nwhich is the\n\nWARN_ON_ONCE(!xa_empty(&tctx->xa));\n\nsanity check in __io_uring_free() when a io_uring_task is going through\nits final put. The syzbot test case includes injecting memory allocation\nfailures, and it very much looks like xa_store() can fail one of its\nmemory allocations and end up with ->head being non-NULL even though no\nentries exist in the xarray.\n\nUntil this issue gets sorted out, work around it by attempting to\niterate entries in our xarray, and WARN_ON_ONCE() if one is found.",
  "ProblemTypes": [
    "N/A"
  ],
  "Affected": [
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "2b188cc1bb857a9d4701ae59aa7768b5124e262e",
        "2b188cc1bb857a9d4701ae59aa7768b5124e262e",
        "2b188cc1bb857a9d4701ae59aa7768b5124e262e",
        "2b188cc1bb857a9d4701ae59aa7768b5124e262e"
      ]
    },
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "5.1",
        "0",
        "6.1.120",
        "6.6.66",
        "6.12.5",
        "6.13"
      ]
    }
  ],
  "Reference": [
    "https://git.kernel.org/stable/c/94ad56f61b873ffeebcc620d451eacfbdf9d40f0",
    "https://git.kernel.org/stable/c/42882b583095dcf747da6e3af1daeff40e27033e",
    "https://git.kernel.org/stable/c/d5b2ddf1f90c7248eff9630b95895c8950f2f36d",
    "https://git.kernel.org/stable/c/7eb75ce7527129d7f1fee6951566af409a37a1c4"
  ]
}