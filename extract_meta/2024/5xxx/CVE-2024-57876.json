{
  "CVE Code": "CVE-2024-57876",
  "Published": "2025-01-11T14:49:02.550Z",
  "Updated": "2025-05-04T13:01:27.572Z",
  "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/dp_mst: Fix resetting msg rx state after topology removal\n\nIf the MST topology is removed during the reception of an MST down reply\nor MST up request sideband message, the\ndrm_dp_mst_topology_mgr::up_req_recv/down_rep_recv states could be reset\nfrom one thread via drm_dp_mst_topology_mgr_set_mst(false), racing with\nthe reading/parsing of the message from another thread via\ndrm_dp_mst_handle_down_rep() or drm_dp_mst_handle_up_req(). The race is\npossible since the reader/parser doesn't hold any lock while accessing\nthe reception state. This in turn can lead to a memory corruption in the\nreader/parser as described by commit bd2fccac61b4 (\"drm/dp_mst: Fix MST\nsideband message body length check\").\n\nFix the above by resetting the message reception state if needed before\nreading/parsing a message. Another solution would be to hold the\ndrm_dp_mst_topology_mgr::lock for the whole duration of the message\nreception/parsing in drm_dp_mst_handle_down_rep() and\ndrm_dp_mst_handle_up_req(), however this would require a bigger change.\nSince the fix is also needed for stable, opting for the simpler solution\nin this patch.",
  "ProblemTypes": [
    "N/A"
  ],
  "Affected": [
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "b30fcedeba643ca16eaa6212c1245598b7cd830d",
        "1d082618bbf3b6755b8cc68c0a8122af2842d593",
        "1d082618bbf3b6755b8cc68c0a8122af2842d593",
        "1d082618bbf3b6755b8cc68c0a8122af2842d593",
        "ee4a4282d78d96e07e714c28ca54679713fa2157",
        "db35e49413a4d03ea0c003598803e49956f59324",
        "a579ed4613b5a64074963988ad481e43cf3b917b"
      ]
    },
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "6.3",
        "0",
        "6.1.120",
        "6.6.66",
        "6.12.5",
        "6.13"
      ]
    }
  ],
  "Reference": [
    "https://git.kernel.org/stable/c/94b33b2d7640e807869451384eb88321dd0ffbd4",
    "https://git.kernel.org/stable/c/d834d20d2e86c52ed5cab41763fa61e6071680ef",
    "https://git.kernel.org/stable/c/be826b4451fd187a7c0b04be4f8243d5df6e0450",
    "https://git.kernel.org/stable/c/a6fa67d26de385c3c7a23c1e109a0e23bfda4ec7"
  ]
}