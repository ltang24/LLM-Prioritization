{
  "CVE Code": "CVE-2024-38570",
  "Published": "2024-06-19T13:35:36.274Z",
  "Updated": "2025-05-04T09:14:20.334Z",
  "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ngfs2: Fix potential glock use-after-free on unmount\n\nWhen a DLM lockspace is released and there ares still locks in that\nlockspace, DLM will unlock those locks automatically.  Commit\nfb6791d100d1b started exploiting this behavior to speed up filesystem\nunmount: gfs2 would simply free glocks it didn't want to unlock and then\nrelease the lockspace.  This didn't take the bast callbacks for\nasynchronous lock contention notifications into account, which remain\nactive until until a lock is unlocked or its lockspace is released.\n\nTo prevent those callbacks from accessing deallocated objects, put the\nglocks that should not be unlocked on the sd_dead_glocks list, release\nthe lockspace, and only then free those glocks.\n\nAs an additional measure, ignore unexpected ast and bast callbacks if\nthe receiving glock is dead.",
  "ProblemTypes": [
    "N/A"
  ],
  "Affected": [
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "fb6791d100d1bba20b5cdbc4912e1f7086ec60f8",
        "fb6791d100d1bba20b5cdbc4912e1f7086ec60f8",
        "fb6791d100d1bba20b5cdbc4912e1f7086ec60f8",
        "fb6791d100d1bba20b5cdbc4912e1f7086ec60f8"
      ]
    },
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "3.8",
        "0",
        "6.6.33",
        "6.8.12",
        "6.9.3",
        "6.10"
      ]
    }
  ],
  "Reference": [
    "https://git.kernel.org/stable/c/0636b34b44589b142700ac137b5f69802cfe2e37",
    "https://git.kernel.org/stable/c/e42e8a24d7f02d28763d16ca7ec5fc6d1f142af0",
    "https://git.kernel.org/stable/c/501cd8fabf621d10bd4893e37f6ce6c20523c8ca",
    "https://git.kernel.org/stable/c/d98779e687726d8f8860f1c54b5687eec5f63a73"
  ]
}