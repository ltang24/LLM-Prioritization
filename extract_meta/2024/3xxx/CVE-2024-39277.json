{
  "CVE Code": "CVE-2024-39277",
  "Published": "2024-06-21T11:15:13.559Z",
  "Updated": "2025-05-04T09:16:07.465Z",
  "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndma-mapping: benchmark: handle NUMA_NO_NODE correctly\n\ncpumask_of_node() can be called for NUMA_NO_NODE inside do_map_benchmark()\nresulting in the following sanitizer report:\n\nUBSAN: array-index-out-of-bounds in ./arch/x86/include/asm/topology.h:72:28\nindex -1 is out of range for type 'cpumask [64][1]'\nCPU: 1 PID: 990 Comm: dma_map_benchma Not tainted 6.9.0-rc6 #29\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996)\nCall Trace:\n <TASK>\ndump_stack_lvl (lib/dump_stack.c:117)\nubsan_epilogue (lib/ubsan.c:232)\n__ubsan_handle_out_of_bounds (lib/ubsan.c:429)\ncpumask_of_node (arch/x86/include/asm/topology.h:72) [inline]\ndo_map_benchmark (kernel/dma/map_benchmark.c:104)\nmap_benchmark_ioctl (kernel/dma/map_benchmark.c:246)\nfull_proxy_unlocked_ioctl (fs/debugfs/file.c:333)\n__x64_sys_ioctl (fs/ioctl.c:890)\ndo_syscall_64 (arch/x86/entry/common.c:83)\nentry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:130)\n\nUse cpumask_of_node() in place when binding a kernel thread to a cpuset\nof a particular node.\n\nNote that the provided node id is checked inside map_benchmark_ioctl().\nIt's just a NUMA_NO_NODE case which is not handled properly later.\n\nFound by Linux Verification Center (linuxtesting.org).",
  "ProblemTypes": [
    "N/A"
  ],
  "Affected": [
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "65789daa8087e125927230ccb7e1eab13999b0cf",
        "65789daa8087e125927230ccb7e1eab13999b0cf",
        "65789daa8087e125927230ccb7e1eab13999b0cf",
        "65789daa8087e125927230ccb7e1eab13999b0cf",
        "65789daa8087e125927230ccb7e1eab13999b0cf"
      ]
    },
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "5.11",
        "0",
        "5.15.161",
        "6.1.93",
        "6.6.33",
        "6.9.4",
        "6.10"
      ]
    }
  ],
  "Reference": [
    "https://git.kernel.org/stable/c/b41b0018e8ca06e985e87220a618ec633988fd13",
    "https://git.kernel.org/stable/c/8e1ba9df9a35e8dc64f657a64e523c79ba01e464",
    "https://git.kernel.org/stable/c/5a91116b003175302f2e6ad94b76fb9b5a141a41",
    "https://git.kernel.org/stable/c/50ee21bfc005e69f183d6b4b454e33f0c2571e1f",
    "https://git.kernel.org/stable/c/e64746e74f717961250a155e14c156616fcd981f"
  ]
}