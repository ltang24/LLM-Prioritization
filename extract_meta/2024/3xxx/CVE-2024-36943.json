{
  "CVE Code": "CVE-2024-36943",
  "Published": "2024-05-30T15:35:42.119Z",
  "Updated": "2025-05-04T09:12:32.403Z",
  "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfs/proc/task_mmu: fix loss of young/dirty bits during pagemap scan\n\nmake_uffd_wp_pte() was previously doing:\n\n  pte = ptep_get(ptep);\n  ptep_modify_prot_start(ptep);\n  pte = pte_mkuffd_wp(pte);\n  ptep_modify_prot_commit(ptep, pte);\n\nBut if another thread accessed or dirtied the pte between the first 2\ncalls, this could lead to loss of that information.  Since\nptep_modify_prot_start() gets and clears atomically, the following is the\ncorrect pattern and prevents any possible race.  Any access after the\nfirst call would see an invalid pte and cause a fault:\n\n  pte = ptep_modify_prot_start(ptep);\n  pte = pte_mkuffd_wp(pte);\n  ptep_modify_prot_commit(ptep, pte);",
  "ProblemTypes": [
    "N/A"
  ],
  "Affected": [
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "52526ca7fdb905a768a93f8faa418e9b988fc34b",
        "52526ca7fdb905a768a93f8faa418e9b988fc34b"
      ]
    },
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "6.7",
        "0",
        "6.8.10",
        "6.9"
      ]
    }
  ],
  "Reference": [
    "https://git.kernel.org/stable/c/74b3d66f91d9f539f99faad74d796fa9a389a015",
    "https://git.kernel.org/stable/c/c70dce4982ce1718bf978a35f8e26160b82081f4"
  ]
}