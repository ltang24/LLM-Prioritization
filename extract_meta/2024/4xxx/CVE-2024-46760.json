{
  "CVE Code": "CVE-2024-46760",
  "Published": "2024-09-18T07:12:19.995Z",
  "Updated": "2025-05-04T09:33:32.862Z",
  "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: rtw88: usb: schedule rx work after everything is set up\n\nRight now it's possible to hit NULL pointer dereference in\nrtw_rx_fill_rx_status on hw object and/or its fields because\ninitialization routine can start getting USB replies before\nrtw_dev is fully setup.\n\nThe stack trace looks like this:\n\nrtw_rx_fill_rx_status\nrtw8821c_query_rx_desc\nrtw_usb_rx_handler\n...\nqueue_work\nrtw_usb_read_port_complete\n...\nusb_submit_urb\nrtw_usb_rx_resubmit\nrtw_usb_init_rx\nrtw_usb_probe\n\nSo while we do the async stuff rtw_usb_probe continues and calls\nrtw_register_hw, which does all kinds of initialization (e.g.\nvia ieee80211_register_hw) that rtw_rx_fill_rx_status relies on.\n\nFix this by moving the first usb_submit_urb after everything\nis set up.\n\nFor me, this bug manifested as:\n[    8.893177] rtw_8821cu 1-1:1.2: band wrong, packet dropped\n[    8.910904] rtw_8821cu 1-1:1.2: hw->conf.chandef.chan NULL in rtw_rx_fill_rx_status\nbecause I'm using Larry's backport of rtw88 driver with the NULL\nchecks in rtw_rx_fill_rx_status.",
  "ProblemTypes": [
    "N/A"
  ],
  "Affected": [
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "e3037485c68ec1a299ff41160d8fedbd4abc29b9",
        "e3037485c68ec1a299ff41160d8fedbd4abc29b9",
        "e3037485c68ec1a299ff41160d8fedbd4abc29b9"
      ]
    },
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "5.2",
        "0",
        "6.6.51",
        "6.10.10",
        "6.11"
      ]
    }
  ],
  "Reference": [
    "https://git.kernel.org/stable/c/c83d464b82a8ad62ec9077637f75d73fe955635a",
    "https://git.kernel.org/stable/c/25eaef533bf3ccc6fee5067aac16f41f280e343e",
    "https://git.kernel.org/stable/c/adc539784c98a7cc602cbf557debfc2e7b9be8b3"
  ]
}