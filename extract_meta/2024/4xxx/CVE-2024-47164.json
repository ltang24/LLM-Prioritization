{
  "CVE Code": "CVE-2024-47164",
  "Published": "2024-10-10T21:52:27.377Z",
  "Updated": "2024-10-11T15:24:48.863Z",
  "Description": "Gradio is an open-source Python package designed for quick prototyping. This vulnerability relates to the **bypass of directory traversal checks** within the `is_in_or_equal` function. This function, intended to check if a file resides within a given directory, can be bypassed with certain payloads that manipulate file paths using `..` (parent directory) sequences. Attackers could potentially access restricted files if they are able to exploit this flaw, although the difficulty is high. This primarily impacts users relying on Gradio\u2019s blocklist or directory access validation, particularly when handling file uploads. Users are advised to upgrade to `gradio>=5.0` to address this issue. As a workaround, users can manually sanitize and normalize file paths in their Gradio deployment before passing them to the `is_in_or_equal` function. Ensuring that all file paths are properly resolved and absolute can help mitigate the bypass vulnerabilities caused by the improper handling of `..` sequences or malformed paths.",
  "ProblemTypes": [
    "CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
  ],
  "Affected": [
    {
      "vendor": "gradio-app",
      "product": "gradio",
      "versions": [
        "< 5.0"
      ]
    }
  ],
  "Reference": [
    "https://github.com/gradio-app/gradio/security/advisories/GHSA-77xq-6g77-h274"
  ]
}