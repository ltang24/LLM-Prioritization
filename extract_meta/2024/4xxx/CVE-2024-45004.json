{
  "CVE Code": "CVE-2024-45004",
  "Published": "2024-09-04T19:54:46.952Z",
  "Updated": "2025-05-04T09:30:50.442Z",
  "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nKEYS: trusted: dcp: fix leak of blob encryption key\n\nTrusted keys unseal the key blob on load, but keep the sealed payload in\nthe blob field so that every subsequent read (export) will simply\nconvert this field to hex and send it to userspace.\n\nWith DCP-based trusted keys, we decrypt the blob encryption key (BEK)\nin the Kernel due hardware limitations and then decrypt the blob payload.\nBEK decryption is done in-place which means that the trusted key blob\nfield is modified and it consequently holds the BEK in plain text.\nEvery subsequent read of that key thus send the plain text BEK instead\nof the encrypted BEK to userspace.\n\nThis issue only occurs when importing a trusted DCP-based key and\nthen exporting it again. This should rarely happen as the common use cases\nare to either create a new trusted key and export it, or import a key\nblob and then just use it without exporting it again.\n\nFix this by performing BEK decryption and encryption in a dedicated\nbuffer. Further always wipe the plain text BEK buffer to prevent leaking\nthe key via uninitialized memory.",
  "ProblemTypes": [
    "N/A"
  ],
  "Affected": [
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "2e8a0f40a39cc253002f21c54e1b5b995e5ec510",
        "2e8a0f40a39cc253002f21c54e1b5b995e5ec510"
      ]
    },
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "6.10",
        "0",
        "6.10.7",
        "6.11"
      ]
    }
  ],
  "Reference": [
    "https://git.kernel.org/stable/c/9e3b266afcfe4294e84496f50f006f029d3100db",
    "https://git.kernel.org/stable/c/0e28bf61a5f9ab30be3f3b4eafb8d097e39446bb"
  ]
}