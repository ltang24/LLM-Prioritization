{
  "CVE Code": "CVE-2024-43840",
  "Published": "2024-08-17T09:21:55.841Z",
  "Updated": "2025-05-22T12:39:38.808Z",
  "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf, arm64: Fix trampoline for BPF_TRAMP_F_CALL_ORIG\n\nWhen BPF_TRAMP_F_CALL_ORIG is set, the trampoline calls\n__bpf_tramp_enter() and __bpf_tramp_exit() functions, passing them\nthe struct bpf_tramp_image *im pointer as an argument in R0.\n\nThe trampoline generation code uses emit_addr_mov_i64() to emit\ninstructions for moving the bpf_tramp_image address into R0, but\nemit_addr_mov_i64() assumes the address to be in the vmalloc() space\nand uses only 48 bits. Because bpf_tramp_image is allocated using\nkzalloc(), its address can use more than 48-bits, in this case the\ntrampoline will pass an invalid address to __bpf_tramp_enter/exit()\ncausing a kernel crash.\n\nFix this by using emit_a64_mov_i64() in place of emit_addr_mov_i64()\nas it can work with addresses that are greater than 48-bits.",
  "ProblemTypes": [
    "N/A"
  ],
  "Affected": [
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "efc9909fdce00a827a37609628223cd45bf95d0b",
        "efc9909fdce00a827a37609628223cd45bf95d0b",
        "efc9909fdce00a827a37609628223cd45bf95d0b",
        "efc9909fdce00a827a37609628223cd45bf95d0b"
      ]
    },
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "6.0",
        "0",
        "6.1.140",
        "6.6.92",
        "6.10.3",
        "6.11"
      ]
    }
  ],
  "Reference": [
    "https://git.kernel.org/stable/c/077149478497b2f00ff4fd9da2c892defa6418d8",
    "https://git.kernel.org/stable/c/d9664e6ff040798a46cdc5d401064f55b8676c83",
    "https://git.kernel.org/stable/c/6d218fcc707d6b2c3616b6cd24b948fd4825cfec",
    "https://git.kernel.org/stable/c/19d3c179a37730caf600a97fed3794feac2b197b"
  ]
}