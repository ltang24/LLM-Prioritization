{
  "CVE Code": "CVE-2024-41032",
  "Published": "2024-07-29T14:31:47.600Z",
  "Updated": "2025-05-04T09:20:31.707Z",
  "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm: vmalloc: check if a hash-index is in cpu_possible_mask\n\nThe problem is that there are systems where cpu_possible_mask has gaps\nbetween set CPUs, for example SPARC.  In this scenario addr_to_vb_xa()\nhash function can return an index which accesses to not-possible and not\nsetup CPU area using per_cpu() macro.  This results in an oops on SPARC.\n\nA per-cpu vmap_block_queue is also used as hash table, incorrectly\nassuming the cpu_possible_mask has no gaps.  Fix it by adjusting an index\nto a next possible CPU.",
  "ProblemTypes": [
    "N/A"
  ],
  "Affected": [
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "062eacf57ad91b5c272f89dc964fd6dd9715ea7d",
        "062eacf57ad91b5c272f89dc964fd6dd9715ea7d",
        "062eacf57ad91b5c272f89dc964fd6dd9715ea7d"
      ]
    },
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "6.4",
        "0",
        "6.6.41",
        "6.9.10",
        "6.10"
      ]
    }
  ],
  "Reference": [
    "https://git.kernel.org/stable/c/28acd531c9a365dac01b32e6bc54aed8c1429bcb",
    "https://git.kernel.org/stable/c/47f9b6e49b422392fb0e348a65eb925103ba1882",
    "https://git.kernel.org/stable/c/a34acf30b19bc4ee3ba2f1082756ea2604c19138"
  ]
}