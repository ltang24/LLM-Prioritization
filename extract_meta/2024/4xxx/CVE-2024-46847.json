{
  "CVE Code": "CVE-2024-46847",
  "Published": "2024-09-27T12:39:39.550Z",
  "Updated": "2025-05-04T12:58:45.259Z",
  "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm: vmalloc: ensure vmap_block is initialised before adding to queue\n\nCommit 8c61291fd850 (\"mm: fix incorrect vbq reference in\npurge_fragmented_block\") extended the 'vmap_block' structure to contain a\n'cpu' field which is set at allocation time to the id of the initialising\nCPU.\n\nWhen a new 'vmap_block' is being instantiated by new_vmap_block(), the\npartially initialised structure is added to the local 'vmap_block_queue'\nxarray before the 'cpu' field has been initialised.  If another CPU is\nconcurrently walking the xarray (e.g.  via vm_unmap_aliases()), then it\nmay perform an out-of-bounds access to the remote queue thanks to an\nuninitialised index.\n\nThis has been observed as UBSAN errors in Android:\n\n | Internal error: UBSAN: array index out of bounds: 00000000f2005512 [#1] PREEMPT SMP\n |\n | Call trace:\n |  purge_fragmented_block+0x204/0x21c\n |  _vm_unmap_aliases+0x170/0x378\n |  vm_unmap_aliases+0x1c/0x28\n |  change_memory_common+0x1dc/0x26c\n |  set_memory_ro+0x18/0x24\n |  module_enable_ro+0x98/0x238\n |  do_init_module+0x1b0/0x310\n\nMove the initialisation of 'vb->cpu' in new_vmap_block() ahead of the\naddition to the xarray.",
  "ProblemTypes": [
    "N/A"
  ],
  "Affected": [
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "88e0ad40d08a73a74c597e69f4cd2d1fba3838b5",
        "8c61291fd8500e3b35c7ec0c781b273d8cc96cde",
        "8c61291fd8500e3b35c7ec0c781b273d8cc96cde",
        "9983b81579be3403f5cc44b11f66c6c8bea6547f"
      ]
    },
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "6.10",
        "0",
        "6.6.51",
        "6.10.10",
        "6.11"
      ]
    }
  ],
  "Reference": [
    "https://git.kernel.org/stable/c/1b2770e27d6d952f491bb362b657e5b2713c3efd",
    "https://git.kernel.org/stable/c/6cf74e0e5e3ab5d5c9defb4c73dad54d52224671",
    "https://git.kernel.org/stable/c/3e3de7947c751509027d26b679ecd243bc9db255"
  ]
}