{
  "CVE Code": "CVE-2024-47834",
  "Published": "2024-12-11T19:18:04.069Z",
  "Updated": "2024-12-11T21:15:31.525Z",
  "Description": "GStreamer is a library for constructing graphs of media-handling components. An Use-After-Free read vulnerability has been discovered affecting the processing of CodecPrivate elements in Matroska streams. In the GST_MATROSKA_ID_CODECPRIVATE case within the gst_matroska_demux_parse_stream function, a data chunk is allocated using gst_ebml_read_binary. Later, the allocated memory is freed in the gst_matroska_track_free function, by the call to g_free (track->codec_priv). Finally, the freed memory is accessed in the caps_serialize function through gst_value_serialize_buffer. The freed memory will be accessed in the gst_value_serialize_buffer function. This results in a UAF read vulnerability, as the function tries to process memory that has already been freed. This vulnerability is fixed in 1.24.10.",
  "ProblemTypes": [
    "CWE-416: Use After Free"
  ],
  "Affected": [
    {
      "vendor": "gstreamer",
      "product": "gstreamer",
      "versions": [
        "< 1.24.10"
      ]
    }
  ],
  "Reference": [
    "https://securitylab.github.com/advisories/GHSL-2024-280_Gstreamer/",
    "https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/8057.patch",
    "https://gstreamer.freedesktop.org/security/sa-2024-0030.html"
  ]
}