{
  "CVE Code": "CVE-2025-21939",
  "Published": "2025-04-01T15:41:05.393Z",
  "Updated": "2025-05-04T07:25:05.653Z",
  "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/xe/hmm: Don't dereference struct page pointers without notifier lock\n\nThe pnfs that we obtain from hmm_range_fault() point to pages that\nwe don't have a reference on, and the guarantee that they are still\nin the cpu page-tables is that the notifier lock must be held and the\nnotifier seqno is still valid.\n\nSo while building the sg table and marking the pages accesses / dirty\nwe need to hold this lock with a validated seqno.\n\nHowever, the lock is reclaim tainted which makes\nsg_alloc_table_from_pages_segment() unusable, since it internally\nallocates memory.\n\nInstead build the sg-table manually. For the non-iommu case\nthis might lead to fewer coalesces, but if that's a problem it can\nbe fixed up later in the resource cursor code. For the iommu case,\nthe whole sg-table may still be coalesced to a single contigous\ndevice va region.\n\nThis avoids marking pages that we don't own dirty and accessed, and\nit also avoid dereferencing struct pages that we don't own.\n\nv2:\n- Use assert to check whether hmm pfns are valid (Matthew Auld)\n- Take into account that large pages may cross range boundaries\n  (Matthew Auld)\n\nv3:\n- Don't unnecessarily check for a non-freed sg-table. (Matthew Auld)\n- Add a missing up_read() in an error path. (Matthew Auld)\n\n(cherry picked from commit ea3e66d280ce2576664a862693d1da8fd324c317)",
  "ProblemTypes": [
    "N/A"
  ],
  "Affected": [
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "81e058a3e7fd8593d076b4f26f7b8bb49f1d61e3",
        "81e058a3e7fd8593d076b4f26f7b8bb49f1d61e3",
        "81e058a3e7fd8593d076b4f26f7b8bb49f1d61e3"
      ]
    },
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "6.10",
        "0",
        "6.12.19",
        "6.13.7",
        "6.14"
      ]
    }
  ],
  "Reference": [
    "https://git.kernel.org/stable/c/2a24c98f0e4cc994334598d4f3a851972064809d",
    "https://git.kernel.org/stable/c/f9326f529da7298a95643c3267f1c0fdb0db55eb",
    "https://git.kernel.org/stable/c/0a98219bcc961edd3388960576e4353e123b4a51"
  ]
}