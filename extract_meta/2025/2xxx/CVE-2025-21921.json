{
  "CVE Code": "CVE-2025-21921",
  "Published": "2025-04-01T15:40:55.110Z",
  "Updated": "2025-05-04T07:24:36.169Z",
  "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ethtool: netlink: Allow NULL nlattrs when getting a phy_device\n\nethnl_req_get_phydev() is used to lookup a phy_device, in the case an\nethtool netlink command targets a specific phydev within a netdev's\ntopology.\n\nIt takes as a parameter a const struct nlattr *header that's used for\nerror handling :\n\n       if (!phydev) {\n               NL_SET_ERR_MSG_ATTR(extack, header,\n                                   \"no phy matching phyindex\");\n               return ERR_PTR(-ENODEV);\n       }\n\nIn the notify path after a ->set operation however, there's no request\nattributes available.\n\nThe typical callsite for the above function looks like:\n\n\tphydev = ethnl_req_get_phydev(req_base, tb[ETHTOOL_A_XXX_HEADER],\n\t\t\t\t      info->extack);\n\nSo, when tb is NULL (such as in the ethnl notify path), we have a nice\ncrash.\n\nIt turns out that there's only the PLCA command that is in that case, as\nthe other phydev-specific commands don't have a notification.\n\nThis commit fixes the crash by passing the cmd index and the nlattr\narray separately, allowing NULL-checking it directly inside the helper.",
  "ProblemTypes": [
    "N/A"
  ],
  "Affected": [
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "c15e065b46dc4e19837275b826c1960d55564abd",
        "c15e065b46dc4e19837275b826c1960d55564abd",
        "c15e065b46dc4e19837275b826c1960d55564abd"
      ]
    },
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "6.12",
        "0",
        "6.12.19",
        "6.13.7",
        "6.14"
      ]
    }
  ],
  "Reference": [
    "https://git.kernel.org/stable/c/639c70352958735addbba5ae7dd65985da96e061",
    "https://git.kernel.org/stable/c/1f458fa42c29144cef280e05bc49fc21b873d897",
    "https://git.kernel.org/stable/c/637399bf7e77797811adf340090b561a8f9d1213"
  ]
}