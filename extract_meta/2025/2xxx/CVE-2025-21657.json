{
  "CVE Code": "CVE-2025-21657",
  "Published": "2025-01-21T12:18:13.893Z",
  "Updated": "2025-05-04T07:18:22.917Z",
  "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsched_ext: Replace rq_lock() to raw_spin_rq_lock() in scx_ops_bypass()\n\nscx_ops_bypass() iterates all CPUs to re-enqueue all the scx tasks.\nFor each CPU, it acquires a lock using rq_lock() regardless of whether\na CPU is offline or the CPU is currently running a task in a higher\nscheduler class (e.g., deadline). The rq_lock() is supposed to be used\nfor online CPUs, and the use of rq_lock() may trigger an unnecessary\nwarning in rq_pin_lock(). Therefore, replace rq_lock() to\nraw_spin_rq_lock() in scx_ops_bypass().\n\nWithout this change, we observe the following warning:\n\n===== START =====\n[    6.615205] rq->balance_callback && rq->balance_callback != &balance_push_callback\n[    6.615208] WARNING: CPU: 2 PID: 0 at kernel/sched/sched.h:1730 __schedule+0x1130/0x1c90\n=====  END  =====",
  "ProblemTypes": [
    "N/A"
  ],
  "Affected": [
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "0e7ffff1b8117b05635c87d3c9099f6aa9c9b689",
        "0e7ffff1b8117b05635c87d3c9099f6aa9c9b689"
      ]
    },
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "6.12",
        "0",
        "6.12.10",
        "6.13"
      ]
    }
  ],
  "Reference": [
    "https://git.kernel.org/stable/c/d9e446dd63cee7161717a6a8414ba9c6435af764",
    "https://git.kernel.org/stable/c/6268d5bc10354fc2ab8d44a0cd3b042d49a0417e"
  ]
}