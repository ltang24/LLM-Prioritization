{
  "CVE Code": "CVE-2025-38478",
  "Published": "2025-07-28T11:21:44.210Z",
  "Updated": "2025-07-28T11:21:44.210Z",
  "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncomedi: Fix initialization of data for instructions that write to subdevice\n\nSome Comedi subdevice instruction handlers are known to access\ninstruction data elements beyond the first `insn->n` elements in some\ncases.  The `do_insn_ioctl()` and `do_insnlist_ioctl()` functions\nallocate at least `MIN_SAMPLES` (16) data elements to deal with this,\nbut they do not initialize all of that.  For Comedi instruction codes\nthat write to the subdevice, the first `insn->n` data elements are\ncopied from user-space, but the remaining elements are left\nuninitialized.  That could be a problem if the subdevice instruction\nhandler reads the uninitialized data.  Ensure that the first\n`MIN_SAMPLES` elements are initialized before calling these instruction\nhandlers, filling the uncopied elements with 0.  For\n`do_insnlist_ioctl()`, the same data buffer elements are used for\nhandling a list of instructions, so ensure the first `MIN_SAMPLES`\nelements are initialized for each instruction that writes to the\nsubdevice.",
  "ProblemTypes": [
    "N/A"
  ],
  "Affected": [
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "ed9eccbe8970f6eedc1b978c157caf1251a896d4",
        "ed9eccbe8970f6eedc1b978c157caf1251a896d4",
        "ed9eccbe8970f6eedc1b978c157caf1251a896d4",
        "ed9eccbe8970f6eedc1b978c157caf1251a896d4",
        "ed9eccbe8970f6eedc1b978c157caf1251a896d4"
      ]
    },
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "2.6.29",
        "0",
        "6.1.147",
        "6.6.100",
        "6.12.40",
        "6.15.8",
        "6.16"
      ]
    }
  ],
  "Reference": [
    "https://git.kernel.org/stable/c/d3436638738ace8f101af7bdee2eae1bc38e9b29",
    "https://git.kernel.org/stable/c/673ee92bd2d31055bca98a1d96b653f5284289c4",
    "https://git.kernel.org/stable/c/c42116dc70af6664526f7aa82cf937824ab42649",
    "https://git.kernel.org/stable/c/fe8713fb4e4e82a4f91910d9a41bf0613e69a0b9",
    "https://git.kernel.org/stable/c/46d8c744136ce2454aa4c35c138cc06817f92b8e"
  ]
}