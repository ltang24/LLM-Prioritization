{
  "CVE Code": "CVE-2025-38067",
  "Published": "2025-06-18T09:33:45.518Z",
  "Updated": "2025-07-17T16:55:33.456Z",
  "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nrseq: Fix segfault on registration when rseq_cs is non-zero\n\nThe rseq_cs field is documented as being set to 0 by user-space prior to\nregistration, however this is not currently enforced by the kernel. This\ncan result in a segfault on return to user-space if the value stored in\nthe rseq_cs field doesn't point to a valid struct rseq_cs.\n\nThe correct solution to this would be to fail the rseq registration when\nthe rseq_cs field is non-zero. However, some older versions of glibc\nwill reuse the rseq area of previous threads without clearing the\nrseq_cs field and will also terminate the process if the rseq\nregistration fails in a secondary thread. This wasn't caught in testing\nbecause in this case the leftover rseq_cs does point to a valid struct\nrseq_cs.\n\nWhat we can do is clear the rseq_cs field on registration when it's\nnon-zero which will prevent segfaults on registration and won't break\nthe glibc versions that reuse rseq areas on thread creation.",
  "ProblemTypes": [
    "N/A"
  ],
  "Affected": [
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "d7822b1e24f2df5df98c76f0e94a5416349ff759",
        "d7822b1e24f2df5df98c76f0e94a5416349ff759",
        "d7822b1e24f2df5df98c76f0e94a5416349ff759",
        "d7822b1e24f2df5df98c76f0e94a5416349ff759",
        "d7822b1e24f2df5df98c76f0e94a5416349ff759",
        "d7822b1e24f2df5df98c76f0e94a5416349ff759",
        "d7822b1e24f2df5df98c76f0e94a5416349ff759"
      ]
    },
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "4.18",
        "0",
        "5.10.240",
        "5.15.189",
        "6.1.146",
        "6.6.99",
        "6.12.39",
        "6.14.9",
        "6.15"
      ]
    }
  ],
  "Reference": [
    "https://git.kernel.org/stable/c/48900d839a3454050fd5822e34be8d54c4ec9b86",
    "https://git.kernel.org/stable/c/3e4028ef31b69286c9d4878cee0330235f53f218",
    "https://git.kernel.org/stable/c/b2b05d0dc2f4f0646922068af435aed5763d16ba",
    "https://git.kernel.org/stable/c/eaf112069a904b6207b4106ff083e0208232a2eb",
    "https://git.kernel.org/stable/c/f004f58d18a2d3dc761cf973ad27b4a5997bd876",
    "https://git.kernel.org/stable/c/2df285dab00fa03a3ef939b6cb0d0d0aeb0791db",
    "https://git.kernel.org/stable/c/fd881d0a085fc54354414aed990ccf05f282ba53"
  ]
}