{
  "CVE Code": "CVE-2025-37907",
  "Published": "2025-05-20T15:21:40.482Z",
  "Updated": "2025-05-26T05:23:27.446Z",
  "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\naccel/ivpu: Fix locking order in ivpu_job_submit\n\nFix deadlock in job submission and abort handling.\nWhen a thread aborts currently executing jobs due to a fault,\nit first locks the global lock protecting submitted_jobs (#1).\n\nAfter the last job is destroyed, it proceeds to release the related context\nand locks file_priv (#2). Meanwhile, in the job submission thread,\nthe file_priv lock (#2) is taken first, and then the submitted_jobs\nlock (#1) is obtained when a job is added to the submitted jobs list.\n\n       CPU0                            CPU1\n       ----                    \t       ----\n  (for example due to a fault)         (jobs submissions keep coming)\n\n  lock(&vdev->submitted_jobs_lock) #1\n  ivpu_jobs_abort_all()\n  job_destroy()\n                                      lock(&file_priv->lock)           #2\n                                      lock(&vdev->submitted_jobs_lock) #1\n  file_priv_release()\n  lock(&vdev->context_list_lock)\n  lock(&file_priv->lock)           #2\n\nThis order of locking causes a deadlock. To resolve this issue,\nchange the order of locking in ivpu_job_submit().",
  "ProblemTypes": [
    "N/A"
  ],
  "Affected": [
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "35b137630f08d913fc2e33df33ccc2570dff3f7d",
        "35b137630f08d913fc2e33df33ccc2570dff3f7d",
        "35b137630f08d913fc2e33df33ccc2570dff3f7d"
      ]
    },
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "6.3",
        "0",
        "6.12.28",
        "6.14.6",
        "6.15"
      ]
    }
  ],
  "Reference": [
    "https://git.kernel.org/stable/c/079d2622f8c9e0c380149645fff21d35c59ce6ff",
    "https://git.kernel.org/stable/c/b9b70924a272c2d72023306bc56f521c056212ee",
    "https://git.kernel.org/stable/c/ab680dc6c78aa035e944ecc8c48a1caab9f39924"
  ]
}