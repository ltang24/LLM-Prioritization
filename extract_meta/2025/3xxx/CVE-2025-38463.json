{
  "CVE Code": "CVE-2025-38463",
  "Published": "2025-07-25T15:27:45.975Z",
  "Updated": "2025-07-28T04:23:11.023Z",
  "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntcp: Correct signedness in skb remaining space calculation\n\nSyzkaller reported a bug [1] where sk->sk_forward_alloc can overflow.\n\nWhen we send data, if an skb exists at the tail of the write queue, the\nkernel will attempt to append the new data to that skb. However, the code\nthat checks for available space in the skb is flawed:\n'''\ncopy = size_goal - skb->len\n'''\n\nThe types of the variables involved are:\n'''\ncopy: ssize_t (s64 on 64-bit systems)\nsize_goal: int\nskb->len: unsigned int\n'''\n\nDue to C's type promotion rules, the signed size_goal is converted to an\nunsigned int to match skb->len before the subtraction. The result is an\nunsigned int.\n\nWhen this unsigned int result is then assigned to the s64 copy variable,\nit is zero-extended, preserving its non-negative value. Consequently, copy\nis always >= 0.\n\nAssume we are sending 2GB of data and size_goal has been adjusted to a\nvalue smaller than skb->len. The subtraction will result in copy holding a\nvery large positive integer. In the subsequent logic, this large value is\nused to update sk->sk_forward_alloc, which can easily cause it to overflow.\n\nThe syzkaller reproducer uses TCP_REPAIR to reliably create this\ncondition. However, this can also occur in real-world scenarios. The\ntcp_bound_to_half_wnd() function can also reduce size_goal to a small\nvalue. This would cause the subsequent tcp_wmem_schedule() to set\nsk->sk_forward_alloc to a value close to INT_MAX. Further memory\nallocation requests would then cause sk_forward_alloc to wrap around and\nbecome negative.\n\n[1]: https://syzkaller.appspot.com/bug?extid=de6565462ab540f50e47",
  "ProblemTypes": [
    "N/A"
  ],
  "Affected": [
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "270a1c3de47e49dd2fc18f48e46b101e48050e78",
        "270a1c3de47e49dd2fc18f48e46b101e48050e78",
        "270a1c3de47e49dd2fc18f48e46b101e48050e78",
        "270a1c3de47e49dd2fc18f48e46b101e48050e78"
      ]
    },
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "6.5",
        "0",
        "6.6.99",
        "6.12.39",
        "6.15.7",
        "6.16"
      ]
    }
  ],
  "Reference": [
    "https://git.kernel.org/stable/c/81373cd1d72d87c7d844d4454a526b8f53e72d00",
    "https://git.kernel.org/stable/c/62e6160cfb5514787bda833d466509edc38fde23",
    "https://git.kernel.org/stable/c/9f164fa6bb09fbcc60fa5c3ff551ce9eec1befd7",
    "https://git.kernel.org/stable/c/d3a5f2871adc0c61c61869f37f3e697d97f03d8c"
  ]
}