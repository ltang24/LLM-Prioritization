{
  "CVE Code": "CVE-2025-37868",
  "Published": "2025-05-09T06:43:57.383Z",
  "Updated": "2025-05-26T05:22:39.786Z",
  "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/xe/userptr: fix notifier vs folio deadlock\n\nUser is reporting what smells like notifier vs folio deadlock, where\nmigrate_pages_batch() on core kernel side is holding folio lock(s) and\nthen interacting with the mappings of it, however those mappings are\ntied to some userptr, which means calling into the notifier callback and\ngrabbing the notifier lock. With perfect timing it looks possible that\nthe pages we pulled from the hmm fault can get sniped by\nmigrate_pages_batch() at the same time that we are holding the notifier\nlock to mark the pages as accessed/dirty, but at this point we also want\nto grab the folio locks(s) to mark them as dirty, but if they are\ncontended from notifier/migrate_pages_batch side then we deadlock since\nfolio lock won't be dropped until we drop the notifier lock.\n\nFortunately the mark_page_accessed/dirty is not really needed in the\nfirst place it seems and should have already been done by hmm fault, so\njust remove it.\n\n(cherry picked from commit bd7c0cb695e87c0e43247be8196b4919edbe0e85)",
  "ProblemTypes": [
    "N/A"
  ],
  "Affected": [
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "2a24c98f0e4cc994334598d4f3a851972064809d",
        "0a98219bcc961edd3388960576e4353e123b4a51",
        "0a98219bcc961edd3388960576e4353e123b4a51",
        "f9326f529da7298a95643c3267f1c0fdb0db55eb"
      ]
    },
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "6.14",
        "0",
        "6.12.25",
        "6.14.4",
        "6.15"
      ]
    }
  ],
  "Reference": [
    "https://git.kernel.org/stable/c/65dc4e3d5b01db0179fc95c1f0bdb87194c28ab5",
    "https://git.kernel.org/stable/c/90574ecf6052be83971d91d16600c5cf07003bbb",
    "https://git.kernel.org/stable/c/2577b202458cddff85cc154b1fe7f313e0d1f418"
  ]
}