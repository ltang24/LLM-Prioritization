{
  "CVE Code": "CVE-2023-52980",
  "Published": "2025-03-27T16:43:19.493Z",
  "Updated": "2025-05-04T07:46:45.012Z",
  "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nblock: ublk: extending queue_size to fix overflow\n\nWhen validating drafted SPDK ublk target, in a case that\nassigning large queue depth to multiqueue ublk device,\nublk target would run into a weird incorrect state. During\nrounds of review and debug, An overflow bug was found\nin ublk driver.\n\nIn ublk_cmd.h, UBLK_MAX_QUEUE_DEPTH is 4096 which means\neach ublk queue depth can be set as large as 4096. But\nwhen setting qd for a ublk device,\nsizeof(struct ublk_queue) + depth * sizeof(struct ublk_io)\nwill be larger than 65535 if qd is larger than 2728.\nThen queue_size is overflowed, and ublk_get_queue()\nreferences a wrong pointer position. The wrong content of\nublk_queue elements will lead to out-of-bounds memory\naccess.\n\nExtend queue_size in ublk_device as \"unsigned int\".",
  "ProblemTypes": [
    "N/A"
  ],
  "Affected": [
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "71f28f3136aff5890cd56de78abc673f8393cad9",
        "71f28f3136aff5890cd56de78abc673f8393cad9"
      ]
    },
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "6.0",
        "0",
        "6.1.11",
        "6.2"
      ]
    }
  ],
  "Reference": [
    "https://git.kernel.org/stable/c/ee1e3fe4b4579f856997190a00ea4db0307b4332",
    "https://git.kernel.org/stable/c/29baef789c838bd5c02f50c88adbbc6b955aaf61"
  ]
}