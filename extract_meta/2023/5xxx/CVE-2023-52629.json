{
  "CVE Code": "CVE-2023-52629",
  "Published": "2024-03-29T09:13:45.848Z",
  "Updated": "2025-05-04T07:40:19.394Z",
  "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsh: push-switch: Reorder cleanup operations to avoid use-after-free bug\n\nThe original code puts flush_work() before timer_shutdown_sync()\nin switch_drv_remove(). Although we use flush_work() to stop\nthe worker, it could be rescheduled in switch_timer(). As a result,\na use-after-free bug can occur. The details are shown below:\n\n      (cpu 0)                    |      (cpu 1)\nswitch_drv_remove()              |\n flush_work()                    |\n  ...                            |  switch_timer // timer\n                                 |   schedule_work(&psw->work)\n timer_shutdown_sync()           |\n ...                             |  switch_work_handler // worker\n kfree(psw) // free              |\n                                 |   psw->state = 0 // use\n\nThis patch puts timer_shutdown_sync() before flush_work() to\nmitigate the bugs. As a result, the worker and timer will be\nstopped safely before the deallocate operations.",
  "ProblemTypes": [
    "N/A"
  ],
  "Affected": [
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "9f5e8eee5cfe1328660c71812d87c2a67bda389f",
        "9f5e8eee5cfe1328660c71812d87c2a67bda389f"
      ]
    },
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "2.6.20",
        "0",
        "6.5.4",
        "6.6"
      ]
    }
  ],
  "Reference": [
    "https://git.kernel.org/stable/c/610dbd8ac271aa36080aac50b928d700ee3fe4de",
    "https://git.kernel.org/stable/c/246f80a0b17f8f582b2c0996db02998239057c65"
  ]
}