{
  "CVE Code": "CVE-2023-52447",
  "Published": "2024-02-22T16:21:39.032Z",
  "Updated": "2025-05-04T07:36:44.024Z",
  "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Defer the free of inner map when necessary\n\nWhen updating or deleting an inner map in map array or map htab, the map\nmay still be accessed by non-sleepable program or sleepable program.\nHowever bpf_map_fd_put_ptr() decreases the ref-counter of the inner map\ndirectly through bpf_map_put(), if the ref-counter is the last one\n(which is true for most cases), the inner map will be freed by\nops->map_free() in a kworker. But for now, most .map_free() callbacks\ndon't use synchronize_rcu() or its variants to wait for the elapse of a\nRCU grace period, so after the invocation of ops->map_free completes,\nthe bpf program which is accessing the inner map may incur\nuse-after-free problem.\n\nFix the free of inner map by invoking bpf_map_free_deferred() after both\none RCU grace period and one tasks trace RCU grace period if the inner\nmap has been removed from the outer map before. The deferment is\naccomplished by using call_rcu() or call_rcu_tasks_trace() when\nreleasing the last ref-counter of bpf map. The newly-added rcu_head\nfield in bpf_map shares the same storage space with work field to\nreduce the size of bpf_map.",
  "ProblemTypes": [
    "N/A"
  ],
  "Affected": [
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "bba1dc0b55ac462d24ed1228ad49800c238cd6d7",
        "bba1dc0b55ac462d24ed1228ad49800c238cd6d7",
        "bba1dc0b55ac462d24ed1228ad49800c238cd6d7",
        "bba1dc0b55ac462d24ed1228ad49800c238cd6d7",
        "bba1dc0b55ac462d24ed1228ad49800c238cd6d7",
        "bba1dc0b55ac462d24ed1228ad49800c238cd6d7"
      ]
    },
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "5.9",
        "0",
        "5.10.214",
        "5.15.153",
        "6.1.75",
        "6.6.14",
        "6.7.2",
        "6.8"
      ]
    }
  ],
  "Reference": [
    "https://git.kernel.org/stable/c/90c445799fd1dc214d7c6279c144e33a35e29ef2",
    "https://git.kernel.org/stable/c/37d98fb9c3144c0fddf7f6e99aece9927ac8dce6",
    "https://git.kernel.org/stable/c/62fca83303d608ad4fec3f7428c8685680bb01b0",
    "https://git.kernel.org/stable/c/f91cd728b10c51f6d4a39957ccd56d1e802fc8ee",
    "https://git.kernel.org/stable/c/bfd9b20c4862f41d4590fde11d70a5eeae53dcc5",
    "https://git.kernel.org/stable/c/876673364161da50eed6b472d746ef88242b2368"
  ]
}