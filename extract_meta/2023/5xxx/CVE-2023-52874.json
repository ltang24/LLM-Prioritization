{
  "CVE Code": "CVE-2023-52874",
  "Published": "2024-05-21T15:32:07.937Z",
  "Updated": "2025-05-04T07:44:50.495Z",
  "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/tdx: Zero out the missing RSI in TDX_HYPERCALL macro\n\nIn the TDX_HYPERCALL asm, after the TDCALL instruction returns from the\nuntrusted VMM, the registers that the TDX guest shares to the VMM need\nto be cleared to avoid speculative execution of VMM-provided values.\n\nRSI is specified in the bitmap of those registers, but it is missing\nwhen zeroing out those registers in the current TDX_HYPERCALL.\n\nIt was there when it was originally added in commit 752d13305c78\n(\"x86/tdx: Expand __tdx_hypercall() to handle more arguments\"), but was\nlater removed in commit 1e70c680375a (\"x86/tdx: Do not corrupt\nframe-pointer in __tdx_hypercall()\"), which was correct because %rsi is\nlater restored in the \"pop %rsi\".  However a later commit 7a3a401874be\n(\"x86/tdx: Drop flags from __tdx_hypercall()\") removed that \"pop %rsi\"\nbut forgot to add the \"xor %rsi, %rsi\" back.\n\nFix by adding it back.",
  "ProblemTypes": [
    "N/A"
  ],
  "Affected": [
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "7a3a401874bea02f568aa416ac29170d8cde0dc2",
        "7a3a401874bea02f568aa416ac29170d8cde0dc2",
        "7a3a401874bea02f568aa416ac29170d8cde0dc2"
      ]
    },
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "6.4",
        "0",
        "6.5.12",
        "6.6.2",
        "6.7"
      ]
    }
  ],
  "Reference": [
    "https://git.kernel.org/stable/c/2191950d35d8f81620ea8d4e04d983f664fe3a8a",
    "https://git.kernel.org/stable/c/de4c5bacca4f50233f1f791bec9eeb4dee1b14cd",
    "https://git.kernel.org/stable/c/5d092b66119d774853cc9308522620299048a662"
  ]
}