{
  "CVE Code": "CVE-2023-52925",
  "Published": "2025-02-05T09:07:56.434Z",
  "Updated": "2025-05-04T12:49:52.404Z",
  "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: don't fail inserts if duplicate has expired\n\nnftables selftests fail:\nrun-tests.sh testcases/sets/0044interval_overlap_0\nExpected: 0-2 . 0-3, got:\nW: [FAILED]     ./testcases/sets/0044interval_overlap_0: got 1\n\nInsertion must ignore duplicate but expired entries.\n\nMoreover, there is a strange asymmetry in nft_pipapo_activate:\n\nIt refetches the current element, whereas the other ->activate callbacks\n(bitmap, hash, rhash, rbtree) use elem->priv.\nSame for .remove: other set implementations take elem->priv,\nnft_pipapo_remove fetches elem->priv, then does a relookup,\nremove this.\n\nI suspect this was the reason for the change that prompted the\nremoval of the expired check in pipapo_get() in the first place,\nbut skipping exired elements there makes no sense to me, this helper\nis used for normal get requests, insertions (duplicate check)\nand deactivate callback.\n\nIn first two cases expired elements must be skipped.\n\nFor ->deactivate(), this gets called for DELSETELEM, so it\nseems to me that expired elements should be skipped as well, i.e.\ndelete request should fail with -ENOENT error.",
  "ProblemTypes": [
    "N/A"
  ],
  "Affected": [
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "b15ea4017af82011dd55225ce77cce3d4dfc169c",
        "7c7e658a36f8b1522bd3586d8137e5f93a25ddc5",
        "59dab3bf0b8fc08eb802721c0532f13dd89209b8",
        "bd156ce9553dcaf2d6ee2c825d1a5a1718e86524",
        "24138933b97b055d486e8064b4a1721702442a9b",
        "94313a196b44184b5b52c1876da6a537701b425a",
        "1da4874d05da1526b11b82fc7f3c7ac38749ddf8"
      ]
    },
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "6.4.11"
      ]
    }
  ],
  "Reference": [
    "https://git.kernel.org/stable/c/891ca5dfe3b718b441fc786014a7ba8f517da188",
    "https://git.kernel.org/stable/c/af78b0489e8898a8c9449ffc0fdd2e181916f0d4",
    "https://git.kernel.org/stable/c/59ee68c437c562170265194a99698c805a686bb3",
    "https://git.kernel.org/stable/c/156369a702c33ad5434a19c3a689bfb836d4e0b8",
    "https://git.kernel.org/stable/c/7845914f45f066497ac75b30c50dbc735e84e884"
  ]
}