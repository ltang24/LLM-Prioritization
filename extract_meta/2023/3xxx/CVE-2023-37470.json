{
  "CVE Code": "CVE-2023-37470",
  "Published": "2023-08-04T15:12:43.188Z",
  "Updated": "2024-10-17T14:54:36.299Z",
  "Description": "Metabase is an open-source business intelligence and analytics platform. Prior to versions 0.43.7.3, 0.44.7.3, 0.45.4.3, 0.46.6.4, 1.43.7.3, 1.44.7.3, 1.45.4.3, and 1.46.6.4, a vulnerability could potentially allow remote code execution on one's Metabase server. The core issue is that one of the supported data warehouses (an embedded in-memory database H2), exposes a number of ways for a connection string to include code that is then executed by the process running the embedded database. Because Metabase allows users to connect to databases, this means that a user supplied string can be used to inject executable code. Metabase allows users to validate their connection string before adding a database (including on setup), and this validation API was the primary vector used as it can be called without validation. Versions 0.43.7.3, 0.44.7.3, 0.45.4.3, 0.46.6.4, 1.43.7.3, 1.44.7.3, 1.45.4.3, and 1.46.6.4 fix this issue by removing the ability of users to add H2 databases entirely. As a workaround, it is possible to block these vulnerabilities at the network level by blocking the endpoints `POST /api/database`, `PUT /api/database/:id`, and `POST /api/setup/validateuntil`. Those who use H2 as a file-based database should migrate to SQLite.",
  "ProblemTypes": [
    "CWE-94: Improper Control of Generation of Code ('Code Injection')"
  ],
  "Affected": [
    {
      "vendor": "metabase",
      "product": "metabase",
      "versions": [
        "< 0.43.7.3",
        ">= 0.44.0.0, < 0.44.7.3",
        ">= 0.45.0.0, < 0.45.4.3",
        ">= 0.46.0.0, < 0.46.6.4",
        ">= 1.0.0, < 1.43.7.3",
        ">= 1.44.0.0, < 1.44.7.3",
        ">= 1.45.0.0, < 1.45.4.3",
        ">= 1.46.0.0, < 1.46.6.4"
      ]
    }
  ],
  "Reference": [
    "https://github.com/metabase/metabase/security/advisories/GHSA-p7w3-9m58-rq83"
  ]
}