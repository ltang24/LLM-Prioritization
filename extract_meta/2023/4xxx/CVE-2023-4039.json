{
  "CVE Code": "CVE-2023-4039",
  "Published": "2023-09-13T08:05:10.274Z",
  "Updated": "2025-02-13T17:07:49.159Z",
  "Description": "**DISPUTED**A failure in the -fstack-protector feature in GCC-based toolchains \nthat target AArch64 allows an attacker to exploit an existing buffer \noverflow in dynamically-sized local variables in your application \nwithout this being detected. This stack-protector failure only applies \nto C99-style dynamically-sized local variables or those created using \nalloca(). The stack-protector operates as intended for statically-sized \nlocal variables.\n\nThe default behavior when the stack-protector \ndetects an overflow is to terminate your application, resulting in \ncontrolled loss of availability. An attacker who can exploit a buffer \noverflow without triggering the stack-protector might be able to change \nprogram flow control to cause an uncontrolled loss of availability or to\n go further and affect confidentiality or integrity. NOTE: The GCC project argues that this is a missed hardening bug and not a vulnerability by itself.",
  "ProblemTypes": [
    "CWE-693 Protection Mechanism Failure"
  ],
  "Affected": [
    {
      "vendor": "Arm Ltd",
      "product": "Arm GNU Toolchain",
      "versions": [
        "All versions where option -fstack-protector is used"
      ]
    },
    {
      "vendor": "GNU",
      "product": "GCC",
      "versions": [
        "All versions of GCC that target AArch64 when option -fstack-protector is used"
      ]
    }
  ],
  "Reference": [
    "https://developer.arm.com/Arm%20Security%20Center/GCC%20Stack%20Protector%20Vulnerability%20AArch64",
    "https://github.com/metaredteam/external-disclosures/security/advisories/GHSA-x7ch-h5rf-w2mf"
  ]
}