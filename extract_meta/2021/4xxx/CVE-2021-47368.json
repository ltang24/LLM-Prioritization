{
  "CVE Code": "CVE-2021-47368",
  "Published": "2024-05-21T15:03:34.494Z",
  "Updated": "2025-05-04T07:09:30.496Z",
  "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nenetc: Fix illegal access when reading affinity_hint\n\nirq_set_affinity_hit() stores a reference to the cpumask_t\nparameter in the irq descriptor, and that reference can be\naccessed later from irq_affinity_hint_proc_show(). Since\nthe cpu_mask parameter passed to irq_set_affinity_hit() has\nonly temporary storage (it's on the stack memory), later\naccesses to it are illegal. Thus reads from the corresponding\nprocfs affinity_hint file can result in paging request oops.\n\nThe issue is fixed by the get_cpu_mask() helper, which provides\na permanent storage for the cpumask_t parameter.",
  "ProblemTypes": [
    "N/A"
  ],
  "Affected": [
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "d4fd0404c1c95b17880f254ebfee3485693fa8ba",
        "d4fd0404c1c95b17880f254ebfee3485693fa8ba",
        "d4fd0404c1c95b17880f254ebfee3485693fa8ba",
        "d4fd0404c1c95b17880f254ebfee3485693fa8ba"
      ]
    },
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "5.1",
        "0",
        "5.4.150",
        "5.10.70",
        "5.14.9",
        "5.15"
      ]
    }
  ],
  "Reference": [
    "https://git.kernel.org/stable/c/4c4c3052911b577920353a7646e4883d5da40c28",
    "https://git.kernel.org/stable/c/6c3f1b741c6c2914ea120e3a5790d3e900152f7b",
    "https://git.kernel.org/stable/c/6f329d9da2a5ae032fcde800a99b118124ed5270",
    "https://git.kernel.org/stable/c/7237a494decfa17d0b9d0076e6cee3235719de90"
  ]
}