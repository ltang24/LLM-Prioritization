{
  "CVE Code": "CVE-2021-47394",
  "Published": "2024-05-21T15:03:51.503Z",
  "Updated": "2025-05-04T07:10:04.029Z",
  "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: unlink table before deleting it\n\nsyzbot reports following UAF:\nBUG: KASAN: use-after-free in memcmp+0x18f/0x1c0 lib/string.c:955\n nla_strcmp+0xf2/0x130 lib/nlattr.c:836\n nft_table_lookup.part.0+0x1a2/0x460 net/netfilter/nf_tables_api.c:570\n nft_table_lookup net/netfilter/nf_tables_api.c:4064 [inline]\n nf_tables_getset+0x1b3/0x860 net/netfilter/nf_tables_api.c:4064\n nfnetlink_rcv_msg+0x659/0x13f0 net/netfilter/nfnetlink.c:285\n netlink_rcv_skb+0x153/0x420 net/netlink/af_netlink.c:2504\n\nProblem is that all get operations are lockless, so the commit_mutex\nheld by nft_rcv_nl_event() isn't enough to stop a parallel GET request\nfrom doing read-accesses to the table object even after synchronize_rcu().\n\nTo avoid this, unlink the table first and store the table objects in\non-stack scratch space.",
  "ProblemTypes": [
    "N/A"
  ],
  "Affected": [
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "6001a930ce0378b62210d4f83583fc88a903d89d",
        "6001a930ce0378b62210d4f83583fc88a903d89d"
      ]
    },
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "5.12",
        "0",
        "5.14.10",
        "5.15"
      ]
    }
  ],
  "Reference": [
    "https://git.kernel.org/stable/c/f65c73d3aabb87d4353e0bc4a718b5ae8c43fd04",
    "https://git.kernel.org/stable/c/a499b03bf36b0c2e3b958a381d828678ab0ffc5e"
  ]
}