{
  "CVE Code": "CVE-2021-47107",
  "Published": "2024-03-04T18:15:38.706Z",
  "Updated": "2025-05-04T07:04:19.046Z",
  "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nNFSD: Fix READDIR buffer overflow\n\nIf a client sends a READDIR count argument that is too small (say,\nzero), then the buffer size calculation in the new init_dirlist\nhelper functions results in an underflow, allowing the XDR stream\nfunctions to write beyond the actual buffer.\n\nThis calculation has always been suspect. NFSD has never sanity-\nchecked the READDIR count argument, but the old entry encoders\nmanaged the problem correctly.\n\nWith the commits below, entry encoding changed, exposing the\nunderflow to the pointer arithmetic in xdr_reserve_space().\n\nModern NFS clients attempt to retrieve as much data as possible\nfor each READDIR request. Also, we have no unit tests that\nexercise the behavior of READDIR at the lower bound of @count\nvalues. Thus this case was missed during testing.",
  "ProblemTypes": [
    "N/A"
  ],
  "Affected": [
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "37aa5e64022243e721b8334122997881177a4cfc",
        "7f87fc2d34d475225e78b7f5c4eabb121f4282b2",
        "7f87fc2d34d475225e78b7f5c4eabb121f4282b2"
      ]
    },
    {
      "vendor": "Linux",
      "product": "Linux",
      "versions": [
        "5.13",
        "0",
        "5.15.12",
        "5.16"
      ]
    }
  ],
  "Reference": [
    "https://git.kernel.org/stable/c/9e291a6a28d32545ed2fd959a8165144d1724df1",
    "https://git.kernel.org/stable/c/eabc0aab98e5218ceecd82069b0d6fdfff5ee885",
    "https://git.kernel.org/stable/c/53b1119a6e5028b125f431a0116ba73510d82a72"
  ]
}