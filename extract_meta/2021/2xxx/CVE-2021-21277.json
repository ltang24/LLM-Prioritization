{
  "CVE Code": "CVE-2021-21277",
  "Published": "2021-02-01T15:05:24",
  "Updated": "2024-08-03T18:09:15.102Z",
  "Description": "angular-expressions is \"angular's nicest part extracted as a standalone module for the browser and node\". In angular-expressions before version 1.1.2 there is a vulnerability which allows Remote Code Execution if you call \"expressions.compile(userControlledInput)\" where \"userControlledInput\" is text that comes from user input. The security of the package could be bypassed by using a more complex payload, using a \".constructor.constructor\" technique. In terms of impact: If running angular-expressions in the browser, an attacker could run any browser script when the application code calls expressions.compile(userControlledInput). If running angular-expressions on the server, an attacker could run any Javascript expression, thus gaining Remote Code Execution. This is fixed in version 1.1.2 of angular-expressions A temporary workaround might be either to disable user-controlled input that will be fed into angular-expressions in your application or allow only following characters in the userControlledInput.",
  "ProblemTypes": [
    "CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')"
  ],
  "Affected": [
    {
      "vendor": "peerigon",
      "product": "angular-expressions",
      "versions": [
        "< 1.1.2"
      ]
    }
  ],
  "Reference": [
    "https://github.com/peerigon/angular-expressions/security/advisories/GHSA-j6px-jwvv-vpwq",
    "https://www.npmjs.com/package/angular-expressions",
    "http://blog.angularjs.org/2016/09/angular-16-expression-sandbox-removal.html",
    "https://github.com/peerigon/angular-expressions/commit/07edb62902b1f6127b3dcc013da61c6316dd0bf1"
  ]
}