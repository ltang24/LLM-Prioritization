{
  "CVE Code": "CVE-2021-29428",
  "Published": "2021-04-13T17:55:18",
  "Updated": "2024-08-03T22:02:51.887Z",
  "Description": "In Gradle before version 7.0, on Unix-like systems, the system temporary directory can be created with open permissions that allow multiple users to create and delete files within it. Gradle builds could be vulnerable to a local privilege escalation from an attacker quickly deleting and recreating files in the system temporary directory. This vulnerability impacted builds using precompiled script plugins written in Kotlin DSL and tests for Gradle plugins written using ProjectBuilder or TestKit. If you are on Windows or modern versions of macOS, you are not vulnerable. If you are on a Unix-like operating system with the \"sticky\" bit set on your system temporary directory, you are not vulnerable. The problem has been patched and released with Gradle 7.0. As a workaround, on Unix-like operating systems, ensure that the \"sticky\" bit is set. This only allows the original user (or root) to delete a file. If you are unable to change the permissions of the system temporary directory, you can move the Java temporary directory by setting the System Property `java.io.tmpdir`. The new path needs to limit permissions to the build user only. For additional details refer to the referenced GitHub Security Advisory.",
  "ProblemTypes": [
    "CWE-379 Creation of Temporary File in Directory with Incorrect Permissions",
    "CWE-378: Creation of Temporary File With Insecure Permissions"
  ],
  "Affected": [
    {
      "vendor": "gradle",
      "product": "gradle",
      "versions": [
        "< 7.0"
      ]
    }
  ],
  "Reference": [
    "https://docs.gradle.org/7.0/release-notes.html#security-advisories",
    "https://github.com/gradle/gradle/security/advisories/GHSA-89qm-pxvm-p336",
    "https://github.com/gradle/gradle/pull/15654",
    "https://github.com/gradle/gradle/pull/15240"
  ]
}