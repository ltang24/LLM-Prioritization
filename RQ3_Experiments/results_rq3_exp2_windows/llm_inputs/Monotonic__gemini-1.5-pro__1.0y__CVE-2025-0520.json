{
  "trend": "Monotonic",
  "model": "gemini-1.5-pro",
  "window_years": 1.0,
  "cve_id": "CVE-2025-0520",
  "target_date": "2025-07-06",
  "target_record": {
    "date": "2025-07-06",
    "delta": 0.0006,
    "new_score": 0.004,
    "old_score": 0.0034000000000000002,
    "percentage_change": 17.64705882352941,
    "raw_delta": "+0.06",
    "raw_new_score": "0.40%",
    "raw_old_score": "0.34%",
    "row_number": "1"
  },
  "history_used": [
    {
      "date": "2025-05-05",
      "delta": 0.0003,
      "new_score": 0.003,
      "old_score": 0.0027,
      "percentage_change": 11.111111111111109,
      "raw_delta": "+0.03",
      "raw_new_score": "0.30%",
      "raw_old_score": "0.27%",
      "row_number": "3"
    },
    {
      "date": "2025-05-31",
      "delta": 0.0005,
      "new_score": 0.0034000000000000002,
      "old_score": 0.003,
      "percentage_change": 16.666666666666664,
      "raw_delta": "+0.05",
      "raw_new_score": "0.34%",
      "raw_old_score": "0.30%",
      "row_number": "2"
    }
  ],
  "prompt": "You are a cybersecurity expert specialized in EPSS forecasting.\n\nTask: Predict the NEXT EPSS score for CVE-2025-0520 (a number in [0.0, 1.0], no percent).\n\nHistorical window (chronological):\nRow | Date       | EPSS | %  | Î”\n------------------------------------------\n  1 | 2025-05-05 | 0.003000 |  0.30% | +0.0003\n  2 | 2025-05-31 | 0.003400 |  0.34% | +0.0005\n\nStats:\n- Points: 2\n- Mean: 0.003200 (0.32%)\n- Std: 0.000200\n- Range: [0.003000, 0.003400]\n- Trend: Increasing\n\nInstruction:\nReturn ONLY one decimal number between 0.0 and 1.0 (no additional text).\n\nThreat intel (truncated):\nCVE-2025-0520 identifies a critical vulnerability in ShowDoc, specifically\nversions prior to 2.8.7, stemming from inadequate validation of file extensions\nduring file uploads, which permits the execution of arbitrary PHP code and\nconsequently leads to remote code execution. This flaw, categorized under\nunrestricted file upload vulnerabilities, allows attackers to exploit the system\nremotely via the web interface, where they can upload a crafted PHP file without\nneeding physical access to the server. The exploitation process is\nstraightforward, as it relies on the application's failure to enforce proper\nfile extension checks, allowing an attacker to bypass restrictions by either\nusing a permitted extension or manipulating the upload process. While the\nattacker must have basic user privilege..."
}