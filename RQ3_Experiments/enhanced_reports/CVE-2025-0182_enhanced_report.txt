CVE-2025-0182 concerns a vulnerability described in available metadata as: A
vulnerability in danswer-ai/danswer version 0.9.0 allows for denial of service
through memory exhaustion. The issue arises from the use of a vulnerable version
of the starlette package (<=0.49) via fastapi, which was patched in fastapi
version 0.115.3. The vulnerability can be exploited by sending multiple requests
to the /auth/saml/callback endpoint, leading to uncontrolled memory consumption
and eventual denial of service.. Regarding attack vector, analysis indicates
that The vulnerability is triggered by sending repeated requests to a specific
endpoint exposed over HTTP, namely /auth/saml/callback. This implies that
exploitation can occur remotely over a without requiring access or proximity.
Since the endpoint is part of a web application, it is likely accessible via
standard internet protocols, making it susceptible to remote attacks from any
location. The attacker only needs the a Regarding attack complexity, analysis
indicates that The exploit does not appear to require any special conditions,
timing, or environmental setup. The attacker simply sends multiple requests to
the vulnerable endpoint, which leads to memory exhaustion. There is no
indication of needing to bypass authentication, manipulate session states, or
coordinate with other system components. The simplicity of sending repeated
requests to trigger the flaw suggests that the attack Regarding privileges
required, analysis indicates that The vulnerability is exploitable by sending
requests to a public endpoint, and there is no mention of needing to
authenticate or possess any form of elevated access. This implies that an
unauthenticated user can initiate the attack. The lack of privilege requirements
significantly broadens the attack surface, as any external actor with access to
the application can potentially exploit the flaw without needing credent
Regarding user interaction, analysis indicates that There is no indication that
the attack requires any action from a legitimate user of the system. The
attacker independently sends requests to the vulnerable endpoint, and the system
responds in a way that leads to memory exhaustion. Since the exploit does not
rely on tricking users into clicking links, downloading files, or performing any
other interaction, it can be executed entirely by the attacker without involvin
Regarding scope, analysis indicates that The vulnerability appears to affect the
application in which the vulnerable endpoint resides, and there is no evidence
that it causes a security impact beyond that boundary. The denial of service
condition results from memory exhaustion within the same process or service
context. There is no indication that the flaw allows the attacker to affect
other components, services, or systems outside the vulnerable applicatio
Regarding confidentiality impact, analysis indicates that The described
vulnerability leads to a denial of service through memory exhaustion but does
not involve unauthorized access to data. There is no mention of data leakage,
exposure of sensitive information, or any mechanism that would allow the
attacker to read or infer confidential content. Therefore, the flaw does not
appear to compromise the confidentiality of the system or its users, as its
impact is limited to res Regarding integrity impact, analysis indicates that
There is no indication that the vulnerability allows an attacker to modify data,
alter system behavior, or tamper with the integrity of the application. The
exploit results in memory exhaustion and service disruption, but it does not
involve injecting malicious data, changing configurations, or corrupting stored
information. As such, the integrity of the system remains unaffected, and the
attack does not compromise t Regarding availability impact, analysis indicates
that The vulnerability directly targets system availability by causing
uncontrolled memory consumption, which can lead to service crashes or
unresponsiveness. This type of resource exhaustion can render the application
unusable until manual intervention or a system restart occurs. Given that the
attack can be repeated and does not require special conditions, it poses a
significant threat to the continuous operation of the From a risk perspective,
the practical attack surface and operational preconditions should be assessed
within each deployment to gauge the plausibility of abuse and potential business
impact; operators should prioritize vendor patches or configuration hardening
that removes the vulnerable code path, enforce least-privilege, tighten input
handling, and increase monitoring around suspicious access to sensitive
resources. This fallback summary is derived from structured notes and should be
treated as provisional when compared with a full narrative written by a large
language model.