CVE-2025-0189 concerns a vulnerability described in available metadata as: In
version 3.25.0 of aimhubio/aim, the tracking server is vulnerable to a denial of
service attack. The server overrides the maximum size for websocket messages,
allowing very large images to be tracked. This causes the server to become
unresponsive to other requests while processing the large image, leading to a
denial of service condition.. Regarding attack vector, analysis indicates that
The vulnerability is exploitable through the via websocket connections, which
are typically exposed over the internet or internal networks. Since the flaw
involves sending oversized image data through a websocket, an attacker can
remotely trigger the condition without needing access or proximity. This makes
the attack feasible from any location with access to the server’s websocket
endpoint, assuming it is not restri Regarding attack complexity, analysis
indicates that The attack does not appear to require any special conditions or
environmental setup beyond the ability to send large image data through an open
websocket connection. There is no indication that the attacker must bypass any
rate-limiting, perform timing-based actions, or manipulate server state in a
complex way. The vulnerability stems from the server’s failure to enforce a
maximum message size, which is a predictable Regarding privileges required,
analysis indicates that The attacker only needs access to the websocket
interface of the tracking server, which is typically available to
unauthenticated users or users with minimal permissions. There is no mention of
authentication or role-based access control being to send image data. If the
websocket endpoint is publicly accessible or exposed to -privilege users, the
attack can be carried out without elevated permissions. This significan
Regarding user interaction, analysis indicates that The vulnerability does not
depend on any action or cooperation from a legitimate user. The attacker
initiates the exploit by sending a large image payload directly to the server,
which then becomes unresponsive. There is no need for a victim to click a link,
open a file, or perform any other interaction. The server-side flaw is triggered
solely by the attacker’s input, making it a fully autonomous attack vector. This
Regarding scope, analysis indicates that The denial of service condition affects
the availability of the tracking server itself, rendering it unresponsive to
other requests. There is no indication that the vulnerability causes a breach or
impact beyond the boundaries of the vulnerable component. The server’s
processing resources are consumed, but there is no evidence of privilege
escalation, data leakage, or compromise of other systems. Therefore, the impac
Regarding confidentiality impact, analysis indicates that There is no evidence
that this vulnerability leads to unauthorized access to sensitive data or
information disclosure. The flaw is centered around resource exhaustion due to
oversized websocket messages, which affects server responsiveness but does not
expose internal data. The server becomes unavailable, but it does not leak or
transmit confidential information as part of the failure. Therefore, the
confidentiality Regarding integrity impact, analysis indicates that The
vulnerability does not appear to alter or corrupt data within the system. It
causes the server to become unresponsive, but there is no indication that it
modifies tracked data, logs, or other stored information. The attack focuses on
overwhelming the server’s processing capabilities rather than tampering with its
contents. As such, the integrity of the system’s data and operations is
preserved, even though availa Regarding availability impact, analysis indicates
that The vulnerability directly affects the availability of the tracking server
by allowing oversized websocket messages to consume excessive processing
resources. This results in the server becoming unresponsive to other requests,
effectively denying service to legitimate users. The impact is significant
because it can disrupt operations, delay data tracking, and prevent access to
functionality. The server’s inability to From a risk perspective, the practical
attack surface and operational preconditions should be assessed within each
deployment to gauge the plausibility of abuse and potential business impact;
operators should prioritize vendor patches or configuration hardening that
removes the vulnerable code path, enforce least-privilege, tighten input
handling, and increase monitoring around suspicious access to sensitive
resources. This fallback summary is derived from structured notes and should be
treated as provisional when compared with a full narrative written by a large
language model.