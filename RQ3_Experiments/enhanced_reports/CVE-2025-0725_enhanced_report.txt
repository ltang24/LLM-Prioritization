CVE-2025-0725 describes a vulnerability in libcurl affecting a wide range of
curl versions from 7.10.5 through 8.11.1, where improper handling of
gzip-compressed HTTP responses—specifically when the option is enabled—can lead
to a buffer overflow due to an attacker-controlled integer overflow, but only
when linked against zlib version 1.2.0.3 or earlier. The root cause lies in
libcurl's failure to properly validate decompression size calculations, allowing
a malicious actor to craft a response that manipulates the expected buffer
allocation, resulting in memory corruption during decompression. This flaw is
reachable via standard HTTP input channels and does not require physical access
or specialized conditions, making it accessible through routine network
interactions. Exploitation is technically straightforward, relying on the
delivery of malformed compressed data that triggers the vulnerable code path
during normal parsing routines. Attackers with access to any interface that
invokes libcurl’s decompression logic—such as authenticated users of a web
service or automated backend processes—could feasibly exploit this issue without
needing elevated privileges or user interaction, provided they can influence the
HTTP response content. In realistic scenarios, this could be leveraged in
server-side applications that fetch external resources, potentially allowing
remote code execution, unauthorized data access, or service disruption depending
on the deployment context. The impact on confidentiality is notable if the
overflow enables leakage of memory-resident data, while integrity risks arise if
the corruption affects stored state or application logic. Availability could
also be degraded through repeated triggering, leading to crashes or resource
exhaustion. Mitigation requires upgrading to a version of libcurl compiled
against a secure zlib release newer than 1.2.0.3, and administrators should
audit dependencies to ensure no legacy compression libraries are in use. Where
immediate patching is not feasible, disabling automatic decompression or
isolating libcurl operations within hardened containers may reduce exposure.
Given the clarity of the exploit path, the broad version range affected, and the
simplicity of the attack conditions, confidence in the severity and
exploitability of this vulnerability is high, warranting prompt remediation
across all impacted environments.