CVE-2025-0428 identifies a PHP Object Injection vulnerability in the “AI Power:
Complete AI Pack” WordPress plugin, affecting all versions up to and including
1.8.96. The flaw resides in the wpaicg_export_prompts function, which improperly
deserializes user-supplied content from the $form['post_content'] variable
without validating its origin or structure. This deserialization of untrusted
input enables attackers with administrative access to inject arbitrary PHP
objects into the application’s runtime. While the plugin itself lacks a built-in
property-oriented programming (POP) chain, the presence of such a chain in any
other installed plugin or theme could escalate the impact significantly,
potentially allowing file deletion, unauthorized data access, or remote code
execution. The vulnerability is accessible through standard plugin interfaces
and does not require physical access or complex environmental conditions, making
it relatively straightforward to exploit once authenticated access is obtained.
Attackers do not need to manipulate timing or external dependencies, and no
additional user interaction is required beyond the initial submission of crafted
content. The scope of impact is generally confined to the plugin’s operational
boundaries unless chained with other components that extend its reach into the
broader system. Exploitation could lead to exposure of sensitive information if
the injected object interacts with data-handling routines, and integrity may be
compromised if malicious payloads alter stored content or configuration.
Availability risks also emerge if repeated exploitation triggers
resource-intensive operations, potentially degrading system performance or
causing service outages. Real-world scenarios include a compromised admin
account used to inject payloads that leverage a vulnerable third-party theme to
execute arbitrary commands or exfiltrate database contents. To mitigate this
risk, users should immediately update to the patched version released in
changeset 3224162, which addresses the unsafe deserialization logic.
Administrators are also advised to audit installed plugins and themes for known
POP chains and restrict administrative access to trusted users only. Given the
need for authenticated access and the absence of an inherent POP chain,
exploitation requires specific conditions but remains plausible in environments
with weak access controls or vulnerable auxiliary components. Confidence in this
assessment is high, based on direct analysis of the plugin’s code path and
corroborated threat intelligence from reputable sources.