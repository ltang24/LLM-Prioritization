CVE-2025-0055 affects SAP GUI for Windows version 8.0 (BC-FES-GUI), where user
input is locally cached on the client machine to enhance usability,
inadvertently introducing a confidentiality risk under narrowly defined
conditions. The vulnerability stems from insufficient isolation of stored input
data within the user’s operating system directory, allowing an attacker with
administrative rights or direct access to the victim’s user profile to extract
potentially sensitive information. The flaw does not require physical proximity
or specialized attack infrastructure; instead, it is accessible through standard
input channels of the application, making the vulnerable code path reachable via
routine usage patterns. Exploitation is straightforward and does not hinge on
timing constraints or environmental dependencies, relying instead on the
attacker’s ability to access the local file system and interpret cached
transaction data. While the vulnerability does not inherently breach system
boundaries or compromise backend services, the exposure of user-entered
data—ranging from benign entries to confidential credentials or
business-critical inputs—poses a significant threat to data privacy. The attack
vector is local, but the simplicity of execution and the potential sensitivity
of the exposed data elevate the risk profile. In realistic scenarios, a
malicious insider or a threat actor with escalated privileges on a shared
workstation could harvest cached inputs from SAP GUI sessions, particularly in
environments where multiple users share endpoints or where endpoint hardening is
insufficient. Although the vulnerability does not directly enable data
manipulation or service disruption, repeated exploitation could lead to
performance degradation if the caching mechanism is abused. Mitigation should
focus on restricting access to the user’s local directory, enforcing least
privilege principles, and applying SAP’s recommended patches as outlined in
their security advisory. Organizations should also consider disabling or
limiting local caching features where feasible, especially in high-sensitivity
deployments. Based on the available evidence and the specificity of the
exploitation conditions, confidence in the technical characterization and risk
assessment is high, though the practical impact will vary depending on endpoint
security posture and user behavior.