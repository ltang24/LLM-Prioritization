CVE-2025-0054 concerns a vulnerability described in available metadata as: SAP
NetWeaver Application Server Java does not sufficiently handle user input,
resulting in a stored cross-site scripting vulnerability. The application allows
attackers with basic user privileges to store a Javascript payload on the
server, which could be later executed in the victim's web browser. With this the
attacker might be able to read or modify information associated with the
vulnerable web page.. Regarding attack vector, analysis indicates that The
vulnerability is exploitable through a web-based interface, where attackers can
inject malicious JavaScript into the application via user input fields. This
suggests that the attack can be carried out remotely over a , without requiring
access to the system. Since the payload is stored and later executed in the
victim’s browser, the initial injection likely occurs through a standard web
request, such as submittin Regarding attack complexity, analysis indicates that
The attack does not appear to require any special conditions or advanced
techniques beyond crafting a suitable JavaScript payload and identifying an
input field that fails to sanitize user input. Stored cross-site scripting
typically involves straightforward injection into persistent fields, such as
comments or user profiles. There is no indication of timing, race conditions, or
environmental dependencies that would Regarding privileges required, analysis
indicates that The attacker must have basic user privileges to store the
malicious script on the server. This implies that the attacker cannot exploit
the vulnerability anonymously and must first authenticate or otherwise gain
access to a user account. However, the privileges are minimal and likely
correspond to standard access granted to regular users, such as the ability to
post content or update profile information. No elevated Regarding user
interaction, analysis indicates that For the malicious script to execute, a
victim must load the compromised page in their browser. This means the attack’s
success depends on user interaction, such as clicking a link, viewing a profile,
or accessing a page where the payload is embedded. The attacker cannot force
execution without the victim’s participation. This reliance on user behavior
introduces an additional step in the attack chain, requiring socia Regarding
scope, analysis indicates that The impact of the vulnerability is confined to
the victim’s browser session and the context of the vulnerable web page. There
is no indication that the attack affects other components or systems beyond the
application itself. The malicious script operates within the same security
boundaries as the vulnerable application and does not escalate privileges or
access resources outside its domain. Therefore, the effects re Regarding
confidentiality impact, analysis indicates that Once the malicious script
executes in the victim’s browser, it may access sensitive information displayed
on the page or stored in the browser’s session, such as cookies, tokens, or
user-specific data. This could allow the attacker to read private messages,
extract credentials, or impersonate the victim. The extent of data exposure
depends on what the vulnerable page contains and how the application handles
session m Regarding integrity impact, analysis indicates that The attacker may
be able to manipulate content displayed to the victim, such as altering form
fields, injecting misleading information, or redirecting the user to malicious
sites. This undermines the trustworthiness of the application’s output and could
lead to fraudulent actions or misinformation. While the attacker cannot modify
server-side data directly, the ability to tamper with client-side presentation
and inte Regarding availability impact, analysis indicates that Stored
cross-site scripting typically does not affect the availability of the
application or its services. The malicious script may disrupt the user’s
experience by causing browser crashes or redirecting them away from the site,
but it does not prevent legitimate users from accessing the application itself.
There is no evidence that the vulnerability enables denial-of-service conditions
or resource exhaustion on the From a risk perspective, the practical attack
surface and operational preconditions should be assessed within each deployment
to gauge the plausibility of abuse and potential business impact; operators
should prioritize vendor patches or configuration hardening that removes the
vulnerable code path, enforce least-privilege, tighten input handling, and
increase monitoring around suspicious access to sensitive resources. This
fallback summary is derived from structured notes and should be treated as
provisional when compared with a full narrative written by a large language
model.