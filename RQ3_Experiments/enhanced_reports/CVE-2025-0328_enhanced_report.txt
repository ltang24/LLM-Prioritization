CVE-2025-0328 exposes a critical command injection vulnerability in
KaiYuanTong’s ECT Platform version 2.0.0, specifically within the HTTP POST
request handler located at /public/server/runCode.php. The flaw stems from
improper sanitization of user-supplied input passed via the 'code' parameter,
allowing remote attackers to inject and execute arbitrary system-level commands
on the server. Because the vulnerable endpoint is publicly accessible and does
not require authentication, exploitation can be initiated by any unauthenticated
actor over the internet without proximity or prior access. The attack mechanism
is technically straightforward, requiring only a crafted POST request with
malicious payloads such as embedded PHP system calls, which are processed
without validation. No user interaction is necessary, and the exploit can be
triggered autonomously, making it highly attractive for automated scanning and
mass exploitation campaigns. The public availability of exploit code further
reduces barriers to entry, enabling even low-skilled threat actors to weaponize
the vulnerability. Once exploited, attackers may gain access to sensitive
server-side data, including configuration files, credentials, and potentially
user information, depending on the server’s file system permissions and
architecture. Moreover, if the compromised server has network access to other
internal resources, adversaries could leverage this foothold to pivot laterally
or escalate privileges, thereby expanding the scope of impact beyond the initial
web application boundary. The absence of access controls and the simplicity of
the attack vector significantly elevate the risk profile, suggesting that
exploitation could result in full system compromise under certain conditions.
Mitigation requires immediate removal or hardening of the vulnerable script,
including strict input validation, disabling dynamic code execution, and
implementing authentication controls for exposed endpoints. Organizations should
also monitor for anomalous POST requests targeting the affected path and
consider deploying web application firewalls to intercept malicious payloads.
Given the clarity of the technical details, the existence of public exploits,
and the lack of vendor response, confidence in the accuracy and severity of this
assessment is high, and urgent remediation is strongly advised.