CVE-2025-0572 identifies a directory traversal vulnerability in Sante PACS
Server version 4.0.9, specifically within its web portal’s handling of DICOM
(DCM) file parsing routines. The flaw stems from insufficient sanitization of
user-supplied file paths, allowing authenticated remote attackers to manipulate
input values in a way that bypasses directory restrictions and results in
arbitrary file creation on the host system. This vulnerability is rooted in
improper validation logic that fails to constrain file operations to designated
directories, thereby enabling crafted DCM files to redirect write operations to
unintended locations. Exploitation requires access to the authenticated
interface, but no elevated privileges beyond standard user credentials are
necessary, and no additional user interaction is involved once access is
obtained. The attack vector is exposed through the normal operational flow of
the web portal, making it reachable over network channels without requiring
physical access or specialized conditions. The complexity of exploitation is
low, relying on predictable parsing behavior and standard file handling
mechanisms, which makes it feasible for threat actors with moderate technical
skill to execute. In realistic scenarios, an attacker could use this flaw to
implant malicious scripts, overwrite configuration files, or introduce
unauthorized binaries, potentially leading to further compromise depending on
the system’s execution context and privilege boundaries. While the
vulnerability’s direct impact is confined to the PACS Server’s operational
scope, indirect consequences such as unauthorized data exposure or service
degradation are plausible, especially if the attacker targets sensitive
directories or repeatedly triggers resource-intensive operations. The integrity
of the system is at risk due to the potential for unauthorized file
modifications, and availability may be affected if exploitation leads to
performance bottlenecks or denial-of-service conditions. To mitigate this issue,
administrators should apply strict input validation on file paths, enforce
directory whitelisting, and consider implementing sandboxing techniques to
isolate file operations. Additionally, upgrading to a patched version—once
available—is strongly recommended, and monitoring for anomalous file creation
patterns may help detect exploitation attempts. Based on the clarity of the
technical flaw, the straightforward nature of the attack path, and the presence
of public advisories, confidence in the assessment is high, though further
validation through exploit testing or vendor confirmation would reinforce the
findings.