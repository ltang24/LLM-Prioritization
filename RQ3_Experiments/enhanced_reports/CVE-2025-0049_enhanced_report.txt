CVE-2025-0049 identifies an information disclosure vulnerability in Fortra’s
GoAnywhere product versions prior to 7.8.0, where authenticated web users
lacking folder creation privileges can inadvertently trigger an error response
that reveals the server’s absolute file path. The flaw stems from improper
handling of file upload requests directed at non-existent directories, resulting
in verbose error messages that expose internal system architecture. This
behavior is rooted in insufficient sanitization and overly detailed exception
reporting, categorized under the generation of error messages containing
sensitive information. Exploitation requires only basic user-level
authentication and deliberate interaction with the web interface, specifically
by submitting a crafted upload request to an invalid path. The attack can be
executed remotely without elevated privileges or complex environmental
conditions, making it accessible to threat actors with minimal technical
sophistication. While the vulnerability does not compromise data integrity or
system availability, the disclosed path information can significantly aid
adversaries in reconnaissance efforts, enabling targeted fuzzing and mapping of
application components. Such insights may facilitate subsequent exploitation of
more critical flaws, particularly in environments where directory structures and
server configurations are tightly coupled with access controls or legacy
components. Real-world scenarios could include penetration testers or malicious
insiders probing the application for weaknesses, using the leaked paths to
identify misconfigurations or hidden endpoints. The impact is confined to the
application layer, with no evidence of lateral movement or cross-system
compromise, but the exposure of structural metadata still poses a non-trivial
risk in hardened environments. To mitigate this issue, organizations should
upgrade to GoAnywhere version 7.8.0 or later, which addresses the flaw by
suppressing sensitive path details in error messages. Additionally, implementing
stricter input validation and customizing error handling routines to avoid
revealing internal system information can further reduce exposure. Logging and
monitoring anomalous upload attempts may also help detect reconnaissance
activity. Based on the clarity of the vulnerability’s behavior, the
straightforward exploitation path, and the availability of vendor guidance, the
confidence level in this assessment is high.