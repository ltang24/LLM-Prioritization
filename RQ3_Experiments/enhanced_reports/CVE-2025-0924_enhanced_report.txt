CVE-2025-0924 identifies a stored cross-site scripting flaw in the WP Activity
Log plugin for WordPress, affecting all versions up to and including 5.2.2. The
vulnerability stems from inadequate sanitization of user-supplied input and
improper escaping of output within the plugin’s handling of the ‘message’
parameter, allowing malicious JavaScript to be persistently injected into site
content. This flaw is reachable via standard HTTP/S requests and does not
require any form of authentication, making it accessible to any external actor
capable of submitting crafted input to the plugin’s exposed interface.
Exploitation is technically trivial, requiring no specialized knowledge or
environmental conditions beyond the ability to deliver a payload that reaches
the vulnerable code path. Once stored, the malicious script executes when a
legitimate user accesses the compromised page, introducing a dependency on user
interaction for the attack to succeed. The impact of successful exploitation
extends beyond the plugin itself, as the injected script runs in the context of
the victim’s browser session, potentially granting access to sensitive data such
as authentication tokens, cookies, or personal information displayed on the
page. If the victim holds administrative privileges, the attacker may gain
indirect control over broader site functionality. Additionally, the attacker can
manipulate page content, impersonate users, or trigger unauthorized actions,
leading to persistent integrity compromise across sessions. While the
vulnerability does not inherently degrade system availability, crafted payloads
could theoretically be used to disrupt site behavior or performance. Real-world
scenarios include attackers embedding malicious links in public comment sections
or forums, luring users to visit compromised pages, and harvesting session data
for privilege escalation or lateral movement within the WordPress ecosystem.
Site administrators should immediately upgrade to a patched version beyond
5.2.2, as the vendor has addressed the issue in subsequent releases by
implementing proper input validation and output encoding. In the interim,
deploying a web application firewall with rule sets targeting script injection
patterns may reduce exposure, though it cannot fully mitigate the risk without a
code-level fix. Given the simplicity of the attack, the absence of access
controls, and the potential for session hijacking and data exfiltration, this
vulnerability poses a significant threat to WordPress sites running the affected
plugin. Confidence in this assessment is high, based on direct analysis of the
plugin’s source code and corroborating threat intelligence from multiple
reputable sources.